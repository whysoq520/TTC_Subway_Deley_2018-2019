<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='ttc_subway_delay_2018_2019' inline='true' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ttc_subway_delay_2018_2019' name='textscan.1918ize1rmwgsv107f9u20b96lm3'>
            <connection class='textscan' directory='C:/ut/TTC-Subway-Delay-Dashboard-2018-2019/Data' filename='ttc_subway_delay_2018_2019.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[station_in_line_2018_2019.csv].[station]' />
              <expression op='[ttc_subway_delay_2018_2019.csv].[station]' />
            </expression>
          </clause>
          <relation connection='textscan.1918ize1rmwgsv107f9u20b96lm3' name='station_in_line_2018_2019.csv' table='[station_in_line_2018_2019#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='station' ordinal='1' />
              <column datatype='real' name='latitude' ordinal='2' />
              <column datatype='real' name='longitude' ordinal='3' />
              <column datatype='string' name='line_name' ordinal='4' />
              <column datatype='real' name='avg_delay_time_2019' ordinal='5' />
              <column datatype='integer' name='num_delays_2019' ordinal='6' />
              <column datatype='integer' name='id' ordinal='7' />
              <column datatype='real' name='avg_delay_time_2018' ordinal='8' />
              <column datatype='integer' name='num_delays_2018' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.1918ize1rmwgsv107f9u20b96lm3' name='ttc_subway_delay_2018_2019.csv' table='[ttc_subway_delay_2018_2019#csv]' type='table'>
            <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='datetime' name='time' ordinal='2' />
              <column datatype='string' name='day' ordinal='3' />
              <column datatype='string' name='station' ordinal='4' />
              <column datatype='string' name='code' ordinal='5' />
              <column datatype='integer' name='min_delay' ordinal='6' />
              <column datatype='integer' name='min_gap' ordinal='7' />
              <column datatype='string' name='bound' ordinal='8' />
              <column datatype='string' name='line' ordinal='9' />
              <column datatype='integer' name='vehicle' ordinal='10' />
              <column datatype='string' name='code_info' ordinal='11' />
              <column datatype='string' name='latitude' ordinal='12' />
              <column datatype='real' name='longitude' ordinal='13' />
              <column datatype='string' name='line_name' ordinal='14' />
              <column datatype='string' name='month' ordinal='15' />
              <column datatype='string' name='time_range' ordinal='16' />
              <column datatype='integer' name='month_number' ordinal='17' />
              <column datatype='integer' name='hour' ordinal='18' />
              <column datatype='integer' name='year' ordinal='19' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[F1]' value='[station_in_line_2018_2019.csv].[F1]' />
          <map key='[avg_delay_time_2018]' value='[station_in_line_2018_2019.csv].[avg_delay_time_2018]' />
          <map key='[avg_delay_time_2019]' value='[station_in_line_2018_2019.csv].[avg_delay_time_2019]' />
          <map key='[bound]' value='[ttc_subway_delay_2018_2019.csv].[bound]' />
          <map key='[code]' value='[ttc_subway_delay_2018_2019.csv].[code]' />
          <map key='[code_info]' value='[ttc_subway_delay_2018_2019.csv].[code_info]' />
          <map key='[date]' value='[ttc_subway_delay_2018_2019.csv].[date]' />
          <map key='[day]' value='[ttc_subway_delay_2018_2019.csv].[day]' />
          <map key='[hour]' value='[ttc_subway_delay_2018_2019.csv].[hour]' />
          <map key='[id (ttc_subway_delay_2018_2019.csv)]' value='[ttc_subway_delay_2018_2019.csv].[id]' />
          <map key='[id]' value='[station_in_line_2018_2019.csv].[id]' />
          <map key='[latitude (ttc_subway_delay_2018_2019.csv)]' value='[ttc_subway_delay_2018_2019.csv].[latitude]' />
          <map key='[latitude]' value='[station_in_line_2018_2019.csv].[latitude]' />
          <map key='[line]' value='[ttc_subway_delay_2018_2019.csv].[line]' />
          <map key='[line_name (ttc_subway_delay_2018_2019.csv)]' value='[ttc_subway_delay_2018_2019.csv].[line_name]' />
          <map key='[line_name]' value='[station_in_line_2018_2019.csv].[line_name]' />
          <map key='[longitude (ttc_subway_delay_2018_2019.csv)]' value='[ttc_subway_delay_2018_2019.csv].[longitude]' />
          <map key='[longitude]' value='[station_in_line_2018_2019.csv].[longitude]' />
          <map key='[min_delay]' value='[ttc_subway_delay_2018_2019.csv].[min_delay]' />
          <map key='[min_gap]' value='[ttc_subway_delay_2018_2019.csv].[min_gap]' />
          <map key='[month]' value='[ttc_subway_delay_2018_2019.csv].[month]' />
          <map key='[month_number]' value='[ttc_subway_delay_2018_2019.csv].[month_number]' />
          <map key='[num_delays_2018]' value='[station_in_line_2018_2019.csv].[num_delays_2018]' />
          <map key='[num_delays_2019]' value='[station_in_line_2018_2019.csv].[num_delays_2019]' />
          <map key='[station (ttc_subway_delay_2018_2019.csv)]' value='[ttc_subway_delay_2018_2019.csv].[station]' />
          <map key='[station]' value='[station_in_line_2018_2019.csv].[station]' />
          <map key='[time]' value='[ttc_subway_delay_2018_2019.csv].[time]' />
          <map key='[time_range]' value='[ttc_subway_delay_2018_2019.csv].[time_range]' />
          <map key='[vehicle]' value='[ttc_subway_delay_2018_2019.csv].[vehicle]' />
          <map key='[year]' value='[ttc_subway_delay_2018_2019.csv].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>station</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[line_name]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>line_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_delay_time_2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_delay_time_2019]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>avg_delay_time_2019</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_delays_2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_delays_2019]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>num_delays_2019</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_delay_time_2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_delay_time_2018]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>avg_delay_time_2018</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_delays_2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_delays_2018]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>num_delays_2018</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id (ttc_subway_delay_2018_2019.csv)]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>11</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>12</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>129</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station (ttc_subway_delay_2018_2019.csv)]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>station</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[code]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>code</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[min_delay]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>min_delay</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_gap</remote-name>
            <remote-type>20</remote-type>
            <local-name>[min_gap]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>min_gap</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bound</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bound]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>bound</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line</remote-name>
            <remote-type>129</remote-type>
            <local-name>[line]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>line</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vehicle</remote-name>
            <remote-type>20</remote-type>
            <local-name>[vehicle]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>vehicle</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code_info</remote-name>
            <remote-type>129</remote-type>
            <local-name>[code_info]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>code_info</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[latitude (ttc_subway_delay_2018_2019.csv)]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude (ttc_subway_delay_2018_2019.csv)]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[line_name (ttc_subway_delay_2018_2019.csv)]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>line_name</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_range</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_range]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>time_range</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month_number]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>month_number</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='year' datatype='integer' name='[Calculation_141300469382561793]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Bound' datatype='string' name='[bound]' role='dimension' type='nominal' />
      <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
      <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
      <column caption='Id (Ttc Subway Delay 2018 2019.Csv)' datatype='integer' name='[id (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Latitude (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[latitude (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
      <column caption='Line Name (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[line_name (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
      <column caption='Line Name' datatype='string' name='[line_name]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Longitude (Ttc Subway Delay 2018 2019.Csv)' datatype='real' name='[longitude (ttc_subway_delay_2018_2019.csv)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
      <column caption='Min Gap' datatype='integer' name='[min_gap]' role='measure' type='quantitative' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Month Number' datatype='integer' name='[month_number]' role='dimension' type='quantitative' />
      <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
      <column caption='Station' datatype='string' name='[station]' role='dimension' type='nominal' />
      <column aggregation='Hour' caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
      <column caption='Time Range' datatype='string' name='[time_range]' role='dimension' type='nominal' />
      <column caption='Vehicle' datatype='integer' name='[vehicle]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[min_delay]' derivation='Avg' name='[avg:min_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
      <column-instance column='[line_name]' derivation='None' name='[none:line_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[min_delay]' derivation='Sum' name='[sum:min_delay:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))' hidden='true' name='[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[line]' />
          <groupfilter function='level-members' level='[station (ttc_subway_delay_2018_2019.csv)]' />
        </groupfilter>
      </group>
      <group caption='Action (Line,Station)' hidden='true' name='[Action (Line,Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[line]' />
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <group caption='Action (Month)' hidden='true' name='[Action (Month)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[month]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.535714' measure-ordering='alphabetic' measure-percentage='0.464286' rowDisplayCount='1000' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[sum:min_delay:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:line_name:nk]' type='palette'>
            <map to='#0055ff'>
              <bucket>&quot;Scarborough Rail Transit&quot;</bucket>
            </map>
            <map to='#00ff00'>
              <bucket>&quot;Bloor Danforth&quot;</bucket>
            </map>
            <map to='#aa007f'>
              <bucket>&quot;Sheppard&quot;</bucket>
            </map>
            <map to='#ffff00'>
              <bucket>&quot;Yonge University Spadina&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:month:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;September&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;January&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;May&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;October&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;June&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;February&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;July&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;November&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;August&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;March&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;December&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;April&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:line:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;SRT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SHP&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;YU&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:year:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2018</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2019</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
      <datasources>
        <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
      </datasources>
      <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
        <column caption='Bound' datatype='string' name='[bound]' role='dimension' type='nominal' />
        <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
        <column-instance column='[bound]' derivation='None' name='[none:bound:nk]' pivot='key' type='nominal' />
        <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:bound:nk]'>
        <groupfilter function='level-members' level='[none:bound:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:bound:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]'>
        <groupfilter function='level-members' level='[none:line:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='subway line' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Line Name' />
        <param name='target' value='subway line' />
      </command>
    </action>
    <action caption='Filter1' name='[Action2]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='count by year' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='count by year' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter2' name='[Action3]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='avg by  month' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='avg by  month' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter3' name='[Action4]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='count by month' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='count by month' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter4' name='[Action5]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 2' type='sheet'>
        <exclude-sheet name='count by stations' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='count by stations' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter5' name='[Action6]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Avg by stations' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Avg by stations' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Avg by stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[min_delay]' derivation='Avg' name='[avg:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Bound' datatype='string' name='[bound]' role='dimension' type='nominal' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[bound]' derivation='None' name='[none:bound:nk]' pivot='key' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[station (ttc_subway_delay_2018_2019.csv)]' derivation='None' name='[none:station (ttc_subway_delay_2018_2019.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]' filter-group='4'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]' included-values='in-range'>
            <min>9.5</min>
            <max>16.0</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station (ttc_subway_delay_2018_2019.csv):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:bound:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station (ttc_subway_delay_2018_2019.csv):nk]</cols>
      </table>
      <simple-id uuid='{33675968-4767-403B-B91A-9064D2506B1F}' />
    </worksheet>
    <worksheet name='avg by  month'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[min_delay]' derivation='Avg' name='[avg:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Bound' datatype='string' name='[bound]' role='dimension' type='nominal' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[bound]' derivation='None' name='[none:bound:nk]' pivot='key' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[line]' />
              <groupfilter function='level-members' level='[station (ttc_subway_delay_2018_2019.csv)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:bound:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</cols>
      </table>
      <simple-id uuid='{FC412B78-165F-412F-B42E-B7CBD1077AC1}' />
    </worksheet>
    <worksheet name='count by month'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column caption='Bound' datatype='string' name='[bound]' role='dimension' type='nominal' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[bound]' derivation='None' name='[none:bound:nk]' pivot='key' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[line]' />
              <groupfilter function='level-members' level='[station (ttc_subway_delay_2018_2019.csv)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:bound:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</cols>
      </table>
      <simple-id uuid='{6884D682-DD44-421A-90E4-FBDB5F0B78C4}' />
    </worksheet>
    <worksheet name='count by stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column caption='Bound' datatype='string' name='[bound]' role='dimension' type='nominal' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[bound]' derivation='None' name='[none:bound:nk]' pivot='key' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[station (ttc_subway_delay_2018_2019.csv)]' derivation='None' name='[none:station (ttc_subway_delay_2018_2019.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[line]' />
              <groupfilter function='level-members' level='[station (ttc_subway_delay_2018_2019.csv)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]' filter-group='4'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' included-values='in-range'>
            <min>180</min>
            <max>653</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station (ttc_subway_delay_2018_2019.csv):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:bound:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station (ttc_subway_delay_2018_2019.csv):nk]</cols>
      </table>
      <simple-id uuid='{F2D3D001-5F93-4BFD-A1BE-8F7A3D94A411}' />
    </worksheet>
    <worksheet name='count by year'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column caption='Bound' datatype='string' name='[bound]' role='dimension' type='nominal' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[bound]' derivation='None' name='[none:bound:nk]' pivot='key' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[line]' />
              <groupfilter function='level-members' level='[station (ttc_subway_delay_2018_2019.csv)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]' filter-group='4'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2018' />
              <groupfilter function='member' level='[none:year:ok]' member='2019' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:bound:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</cols>
      </table>
      <simple-id uuid='{AB353FB6-488E-42A9-BFE3-132EDDEEF44D}' />
    </worksheet>
    <worksheet name='deley count by station'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[min_delay]' derivation='Avg' name='[avg:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Bound' datatype='string' name='[bound]' role='dimension' type='nominal' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[bound]' derivation='None' name='[none:bound:nk]' pivot='key' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[station]' derivation='None' name='[none:station:nk]' pivot='key' type='nominal' />
            <column caption='Station' datatype='string' name='[station]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:bound:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk] + [federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk])</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station:nk]</cols>
      </table>
      <simple-id uuid='{D8953C10-3E22-48FE-B200-79A61E11B9FD}' />
    </worksheet>
    <worksheet name='subway line'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[min_delay]' derivation='Avg' name='[avg:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Bound' datatype='string' name='[bound]' role='dimension' type='nominal' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Line Name' datatype='string' name='[line_name]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[bound]' derivation='None' name='[none:bound:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[line_name]' derivation='None' name='[none:line_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Weekday' name='[wd:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]'>
            <groupfilter from='&quot;April&quot;' function='range' level='[none:month:nk]' to='&quot;September&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[wd:date:ok]'>
            <groupfilter from='1' function='range' level='[wd:date:ok]' to='7' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[yr:date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:date:ok]' member='2019' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[wd:date:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[yr:date:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:bound:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:longitude:qk]' field-type='quantitative' max='-8819688.0922813453' min='-8855174.6127209887' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:latitude:qk]' field-type='quantitative' max='5435956.0139341829' min='5401256.6254444038' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='2' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Line Name:&#9;</run>
                <run bold='true'>&lt;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Min Delay:&#9;</run>
                <run bold='true'>&lt;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Min Delay:&#9;</run>
                <run bold='true'>&lt;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff0000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:latitude:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{3117B189-56BC-4B96-ABA9-309C23939905}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='3' name='subway line' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='14250' id='8' name='subway line' pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='27' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='subway line' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14250' id='8' name='subway line' pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{095BCCA3-FD9D-4BCC-97DC-653A1F25CA4D}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='1500' maxwidth='1200' minheight='1500' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
      </datasources>
      <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
        <column caption='Bound' datatype='string' name='[bound]' role='dimension' type='nominal' />
        <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
        <column-instance column='[bound]' derivation='None' name='[none:bound:nk]' pivot='key' type='nominal' />
        <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98934' id='28' param='horz' type='layout-flow' w='98666' x='667' y='533'>
            <zone h='98934' id='7' param='horz' type='layout-flow' w='85333' x='667' y='533'>
              <zone h='98934' id='5' type='layout-basic' w='85333' x='667' y='533'>
                <zone h='49467' id='13' name='count by year' w='41448' x='667' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24726' id='15' name='count by month' w='43885' x='42115' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='37102' id='17' name='avg by  month' w='43885' x='42115' y='25259'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='37106' id='20' name='count by stations' w='43885' x='42115' y='62361'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45422' id='21' name='Avg by stations' w='41448' x='667' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='4045' id='22' name='Avg by stations' pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' w='41448' x='667' y='95422'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98934' id='27' is-fixed='true' param='vert' type='layout-flow' w='13333' x='86000' y='533'>
              <zone h='7000' id='29' mode='checklist' name='count by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' type='filter' values='database' w='13333' x='86000' y='533'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4066' id='30' mode='checkdropdown' name='Avg by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]' type='filter' values='database' w='13333' x='86000' y='7533'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11600' id='35' name='Avg by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='filter' values='database' w='13333' x='86000' y='11599'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11600' id='38' name='count by year' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:bound:nk]' type='filter' values='database' w='13333' x='86000' y='23199'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='46' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98934' id='45' param='vert' type='layout-flow' w='98666' x='667' y='533'>
                <zone h='11600' id='38' mode='checkdropdown' name='count by year' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:bound:nk]' type='filter' values='database' w='13333' x='86000' y='23199'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49467' id='13' is-fixed='true' name='count by year' w='41448' x='667' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='24726' id='15' is-fixed='true' name='count by month' w='43885' x='42115' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37102' id='17' is-fixed='true' name='avg by  month' w='43885' x='42115' y='25259'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4066' id='30' mode='checkdropdown' name='Avg by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]' type='filter' values='database' w='13333' x='86000' y='7533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11600' id='35' mode='checkdropdown' name='Avg by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='filter' values='database' w='13333' x='86000' y='11599'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45422' id='21' is-fixed='true' name='Avg by stations' w='41448' x='667' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4045' id='22' name='Avg by stations' pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' w='41448' x='667' y='95422'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7000' id='29' mode='checkdropdown' name='count by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' type='filter' values='database' w='13333' x='86000' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37106' id='20' is-fixed='true' name='count by stations' w='43885' x='42115' y='62361'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E3071552-07A4-4836-A978-90FEED1B1078}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='subway line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[mn:date:ok]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:latitude:qk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:longitude:qk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[wd:date:ok]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{CEA95483-894C-419C-B8FD-3B1C134D3957}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='subway line'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{392843AA-7BC1-4D3C-91E3-7AB01B7AA3C9}' />
    </window>
    <window class='worksheet' name='count by year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:bound:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{557AB465-EB92-4576-A1C1-A4B1434F2C43}' />
    </window>
    <window class='worksheet' name='deley count by station'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{707B49C1-664C-4736-9213-AEC1F13FA76C}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Avg by stations'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='avg by  month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='count by month'>
          <zoom type='fit-width' />
          <highlight field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='count by stations'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='count by year'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{56C601C3-6FA9-4F37-94CF-ADFF7E0C9743}' />
    </window>
    <window class='worksheet' name='count by month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F37934F9-02B1-4B2D-8979-B7E135F23393}' />
    </window>
    <window class='worksheet' name='avg by  month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0982E10D-6F21-489F-AC79-7C10B7D3EB33}' />
    </window>
    <window class='worksheet' name='Avg by stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{74FF4550-DE69-474E-96A7-A487D55CA5FC}' />
    </window>
    <window class='worksheet' name='count by stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station (ttc_subway_delay_2018_2019.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{68A4EFFB-DD88-44D8-82E4-5C44176A7551}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg by stations' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAX0ElEQVR4nO3daWwbeZrf8W/xpkSJum9Lsg7bsixZvq9ut8+dnp6+sJldIEg2u0Fe7O6b
      IEBeJO92BgkQIC+TBRaDHMgukmATTGax09M9404fPmVbsi3Zsu6bkijqoERRFEmRrKq8kK22
      LDs2Zd31fADDKopVekjVT3X+Hyq6rusIYUCKoiimrS5CiK0kARCGZugATHmH6ewdRHvdXmA8
      gm868Nr5Zyc8dHT38PDhQ55297/yOTMTY7R396FqP/yMqcnJpOoc7u/C451a8djk1OuXEQpM
      8+RpFwldZ3Swh4mZeQAmfD40ll53v2ccXQc1HuXpkyfMhRcJ+n30Do2iA0H/NOFYgnDQT3v3
      AM+rV2MRnra1EY6pK3+ortHd2YW2w3aozT/72c9+ttVFbIlEkF/95jb1tZV4Ht/kf9/sYW++
      i9YnbditZv7qr35BeXkxPcMzWGKz9I/6sapheoeGCMdNZKY5uX79NkePH+fBnZvUHT/OX//l
      f8CaV8LizBjemTA5bju/+vv/y5H6/USCs4R1GxNeLze++x2RRQ2rSWVRUxgYHiMenmNhfo62
      9h7sFpUFzc6Ub5SMjAyuXfsGc2SCOXMWvv52Iti4fes6e/KzeNTyFJvdwlxEZ256nNR0N+Pe
      cczBIe51jjA5pzHw9CEZ7hT+5n/8HafO1fPVFzeJTHjIqKhmYcpHqsvJ19cbGegbxBqZZNGW
      zpf/87+TXnWI+99/S5ErRvu0lbL8dL76+79jf30DJGI8aWlFV3RCi+Cf8pGYG2NKc5Prdm71
      b/et/PznP/+5ZauL2DIWF3XV+dxubObUgTyqrDlE5vwEpzw81NMoKy2jOCeF2/e6mfKZqMrU
      +LZtjpozF2hubqai4DJxkwOHzYrVasXhSKWwuIx95Zl88as2Pv/sKpitHDlYxq3b9yjLtpIo
      OsbQgxZMFgfFrhgP27sJz84T0M0UOBX2lhUxMdCCbjvDxGgbdkcq5eXlmExmqqvL+N03XxC2
      Z+MemQYgMDPNnH+QR1FYCM7gtJspKSvHborxaDxBQ4WTcb0IU2AYV/5e9uSmg2ZCjQeZiJux
      KSbsGWn89tp3nD13ivs32yjIsTMdtVJ/YC8oCoU5bnyzQaa0SagrIZxQyM3KYs7by4DXT25B
      Hu1PHxCPhPnxuQN81zPKwT2ZW/zLfXvG3QWKR5mPqsSjYUypmfgGO+nu7cfhcmOzKJi1CF5/
      CEeKCycRhqYiFGS7SXHasdlsYLZgUmNour40DWS6bXT3T2NXQnQNjIIaIxiOocWjWFLd9Lc/
      JqYr2Ewaj7pGqTnUgHfMw9GSdBZTcvAMDuByu3Gk5pPwD1J5sG6p1HCAxpZBzl04i92scmD/
      fmw2G56hQewuNw6nmzRtipzSgyi6xldffk1OVjrW9GJ8PU2ELWmEvH2M+Xz09A1gtTpx2qzE
      NZ273/wWLTWT8IJGmj3Mo95ZitPidA15aG/vIr+wkOB8gmO1JdxpbqW8IIPvb9xgNmYjzw3d
      wwFMgT5yKuuZmZkhOyd7K3+rSVPkNOjaDXS0YMuvpiTbta7L1RZDXLvexJWrl7C+zZ+oRJRr
      39zg/NUf4TSvaylvT9e4f/cuDSfPYLfsjL+riqIo6xoAVVUxm7fqNyBEcuQ6gDA8CYAwNAmA
      MDQJgDA0CYAwNAmAMDQJgDA0CYAwtF0dAF1L0NbWRkLTmfeP8+33N4nENUBnpK+dey0daOoi
      d299z9h0kMDkCNdv3yeuysVxo9jVAYjMz9LW1UVcVbn+/Q1SXWmYFNATi3SO+MmMebl+7yE5
      FYfpaG2i6XEntSUunvSPbXXpYpPs6gCkuHMpLcwGVGIxK8UZZp50DaGrCVJSU8nNduGfXyTD
      nY7dYcPhdJDhTicWi2116WKT7OoAzIwP8vRpJ00tXezdm0Vr1zCF2S68szEITXGjfYYrJ/Zz
      59vfYE3JJsNu4ssbj6gsLdzq0sUmSfpmuGholvaBcY7W1TAy2Mt83ELt/gpAboYTO4uiKEry
      A2LMDuxmDV2LMDDoJbe4ZGlIoa6jadoGlPlu9NgYaMnt0ij2ElCsG1SR2E6SDoDD+cNwt4zs
      ArKUKLNxyLIqKMrSv+1kvu/foUWGkponve4/Y7LLbpARJB2AqXEPoVCIcX+ErHQT/piDWpuC
      AiiKgsm0vQ4r1hLH7fg6xMZIOgC5haXkFpYuTeTtrOFvQrxM/swJQ5MACEOTAAhDkwAIQ5MA
      CEOTAAhDkwAIQ5MACEOTAAhDM2536E3W1/GInokwH118D093M62j8OnlEwT9Xhrvt2Jz55Ku
      BBkY8LD/zO/RffcaBVVHOX+6YatL39VkC7BJyqrrsBFFjc7R74uQYlr6gIn07FycJsCkcPzM
      JfaUlVFVaCeeSCGhJra2aAOQAGwSq3Xp9mrv0BBzgSmaWp8QS2hEwzFOXbiAf8LLYmiShC0P
      u8nBx3/wOQuB8S2ueveTXaBNofHo7i3mA/OY6k7y+b5aTvhmmPX5sLssNDe1cPjICcIhlWPH
      ajHpizy938je6vqtLnzX25D26G33viXo3MO5w/voevANU+Yq3j9SzvRID7cfdbD/8CmCI+2M
      BxJcOn+MGzcayS2t5nTDwfUqZdlc25+jJjkewF3/XzA7ita9FrG9rG1E2FuoqN5H88AMkcA4
      /ojOohIFoHPYx6effsqtG99hsqdxsUbn6/vtnP3gI/ra7m5EKdvG2PQ8v2nsTmqePXluPjpd
      vUEVCdigXSC73QFAX3cvfv8E3RPzXHnvAGYtQSi8QEIzo0WjzMypuFOdhEILxBZ3dyeGmWCY
      r+71JTXPsX2FEoANtgEBULl7t4np+RiHP/yEumNH8UzE8I56OXrsCLcb79Fw6j1Cvl48sxqX
      Th3g7u3bVB48sv6lCPEGSQcgMD3Oo84hLr1/hrnpMe4+GeLDS+deeIaZ96/+5IVpF6XFP0xd
      uXoVgJz0esqfPfbehStJFy7Eekg6ABk5heRl+dG1ON6pBYrzMtCfdYRQVRVd11HDPaiB5Pbp
      Tak1WNwnky3njdZyjK+qKnpifc/Bq6r65ie9RNd1Eutch1gp6QAsRsKEw2EW5ueJx6OMjIxQ
      XrmfNOfSosxmM4noMFHfL5Narj3/UxzZZ5Mt543W0qXCbDZjtqzv3uFa+iUpioJlnesQKyUf
      gGiYgvwCYtior6+nuroap1N+SWJnSnrNTc/MIf2FDwJ3vtAnSIidRm6FEIYmARCGJjvvb6Cr
      ce5c+yWuQx+Rr/lo6eght6SGE/VV9LU/pL1vhCOnz9Pz6A4xSzonaoq5/bCdypoj1O8r3ery
      xRvIFuBNFDN1NZUsLKrkFRSiq+rymSXv7AIf//gq/S3fklrWQEWOhZtPR/js008JTA5vceHi
      bUgA3kAxmbA+OxW5qJq4+ME5xkeWVm41FiMUmsNkd7MwF2A+FMZl0QiEQsTl9P2OILtAb5BY
      DNH4xEPY5GfaWklndy9HT5xmdNTL8YZamh73cua9y3g6HxGxVHC5Mp9bt+9z+MSZrS5dvAUJ
      wBtY7C6u/OTz5enS8opnX7kBuHxxqY36gfoTy8+5ePnyptUn3o0E4C08HGni6fjjpOY5WXaW
      mvzaDapIrBcJwFvonuzkWteXSc1TkFYkAdgB5CBYGJpsAXaQzsf3eTI8w+eXTnL9dhNzYYWf
      /v6HhKbHaGx+zKLixKXNMhNc5PSVT4h5O7jV5eFP/vCnW136tiVbgB2k5vApstOs2F3ZHKwq
      paAoHwVIzymmck8eBYWFxBMquW4rnT2djIVtlOakbHXZ25oEYMfQmZv1EwgE8Hu6eDgwQ+3+
      CmLRKKN9rQwHTOzfW0LDsVPYbKnkptgI+r00NT0mnPxQBMOQXaAdZMrnpaykjEVLGiWZ84z7
      pinKzcCVVYh71oNveoZsh05e1WEqy4o40nCY8++fJUU+uvm1JAA7hkJVTd3yVFFR8YrvnsjK
      X/4694XH09MzNrqwHU0CsIP0jc3wn754mNQ8B0pz+KcfScOB10k6AM/H/5rNJtSEigbL98qI
      jRWOxuny+JOaJ9Vp26BqdoekD4Ln/D5uNDah6zDY382Dew9Y3IjKhNgEa+4KoShQkJfLQtyC
      VddRX+gKoWla0oXo2sZ0QFiPrhBreT2apq54PevRFUI6S6y/pAOwEAwwOzvLXDBIW1sPVfv2
      oSvKctcDs9lMwpT82VXFtDEdENajK4RpDa/HZDKveD3r0RVCOkusv6TfGcVk4sD+A5jMFmpq
      9qNhIvlVTIjtIekApLjSSXE9m0hNXedyhNhcciVYGNq2DYCu64QWFgBILEaIxtTn3yDgnyIc
      jaMl4vgmptD1pWOTwHx4CysWO9G2PToa6e/gu4dd/PFPP6Hx2t+iV/+YD2oKiARGuXG/B5Oi
      ke8yo5pNeLyZ+EbHMJPgwoefkGqVoxLxdrbtFqC0qpaSPDeK2caJ48cwPzubszA9wr7j53Gn
      O1g0WTh96hzz453kVdZSU5HH7IKc8hNvb9sGYLivg472DoZGx2hpeUxHWyvTUzOYM/fQ0fg1
      geAiThJ89/23ZJTU4+tppa13gizXtt2oiW1o264teUWl/NE/+iMcTieZ5z7mICZSUlIwWzL5
      6GomZpsTqxlCCxFcLhd1+/aiKmacFtn9EW9v2wbAmeLC+Wwsh9PhWPm9VNfy12lpS1/bHNKk
      VyRv2wZgNjzDv/7iXyQ1T15aAf/mo3+/QRXtDtNjA/yfb+7xp3/8D/n6179kNu7gs89+gsOi
      87f/7b+SV1FPzd4cWp90Yc/IJ1UNMBs2c/HDi9i3uvgNsG0DoOka84vBpOZJtcmFuTfJKa6g
      snQACJCSfpB9aVGmw1FKXDqprhxCoSCZ+XXo0YfY7HaetvaQm5XH7HyCgrRnq4uu0drcSNmh
      02iBUR60D/L+B+dJsZnRdY27d25w9NR5Wu9dx1VQjSUyzsDoFIXlNRw5WLmlr/9l2/YgWGwM
      NREnHosTj9sJLXgZm50lxWImHlWpP3uWVFMY31SQ965eYdI3Sk5uCcdrihj1/3CNRY0usBCa
      wR9Waevo5/zJSh62DAAw2tvG4IgH/2gH5BxiwtPDgfpTHK4sJMWds1Uv+7W27RZAbIyJ0QFs
      Fhs9Q5McP1LFdNRGmh5lLmEj6u+j7OApcl1mHra0c/HCRazxObo8MxyvSV9ehtmZRlFuJipg
      tthwpKRCfB6I8/33jQTmp+jrz8a9r4KYzQq6SvdokEuX3Vv2ul9HAmAwReX7KSrfvzyd88L/
      OXVHlx8//8HzgZUOjmf+MNwSIDI3QfPjHizjJuqLUvn1l3c4feEyo94Z/smf/jl9HQ8o2FvL
      rW+ukZpXTnh2gj3V27NJ2IoATExMEIvF2LNnz1bVIzbBv/2bmyTUtx/joCgKf/EnHyxPO935
      /OE//mfL01WHngUnY+kYrOrgcQB+/MkPPVWrs96l4o2zIgAejwe/34/JZKK4uPh184gdrrXX
      RzyZALzisaGZAYLRuaR+7t6sStIc6W9+4iZatQs0NzfH119/TUNDA0eOyGBq8Wq/evy/eDBy
      P6l5/tXlv+Bw8cp1at4/TlNrF8fPvIc7xYrfO8Sj9gFOnTuLp+sxQdXJyYZ9NDU2UryvgbLC
      9d2UrAjAnj17SEtLIx6PE4lE1vUHCfEqzS0dnDlZx627j/jR5VM0P27n+OEDtDxpp7b6AHOP
      G7l9a4KoZqHCbn3lMgLeAW487CAlI58r759gcqSHh0+6CSyaqc630dc7yMFzV5jo7WJes/AP
      Pr66PO+K06AFBQVUV1VysPYQJ0+++lPb1USMkTEv6DoTY8N4vJPr+HYIo6nck8PNxiZCoSgA
      mSkW7rd04nJn4uluIb2klkh4gWPHj/DoQfMrlzE5OUn5voPMjYyiAvl79nGyroJD9Uc5cfYy
      e/ZWcqCijNwMJ4pp5Q7dqusAoZlxfvfb33L95m2mA6FVP2xhPojXN4GmRZkKxIj4J6QrhFgz
      u8OBmoDjpw8zOurFYrOhANZEkEddHrwjgxyrP8StG7fIzn/1cWnFwXos0QCq3ba8Qrf1+jhU
      tXT7vMlVjDkeoarhNIlIkBfbJKw6BlAUhWhkAZPNScuD+3xw8TK2F8Zip2fmkOrwAXFs1lRS
      NI24rmNZ564Qa+qAwOoOCNIVYn26Qry8DG0N7+vL7wlATnElPyp+fnXYRUFB3vL3DtYcWv76
      06LyV9YBoCYSTE3PcuHieXyeUbIKs9lfU4+WSLAQMXO4rgJNjdJy7y77axtQX1jGqgDYU9Ip
      Kiwgrps5cfrsipUfYGrcw+TEJJk5BcQj40woTooVBWWdu0KsqQMCqzsgSFeI9ekK8fIyTGt4
      X19+T7R4AG1xIqllKNZMzPa8FY9ZLOlceP6xVFlpABQVLd0cmVNU9OxZVs5furJqeavemcnh
      DgZ8s5Rlu4hp8PI9lrmFpVwqXPr82+L87XdpW+wcsdlGwkP/Mal57PmfkVr2Z8vTWiJIePgX
      SS3DZM0ipXTpOsaqAOSUVHPKnEHXoBeHdBUW25yuRon5v0tqHpOj+NUBiAbG+eWvv0bTwWxz
      EFPBLiEQu9iKnVtHRiF/8Puf4M7M4YPTp7DJnUJil1t1dOcf62MhodPT3sp8bCtKEmLzrAqA
      w51PZGIIc14VOY5XzSLE7rEiAIn5cb5v6ubqRx8T8vbLZ0uJXW9FAEL+cUKRCE+fthMM+JiT
      24HELrfiMDe9pI6PXUvn+BXlDBnyCZtil1uxBTBZrLhdDoYG+ukfHCSe/B0AQuwoq050To90
      k7BnUpDhwCw9psQutyoANmcavfebGUlJJaewFKtcCBO72IoAxMMBpuYTVOwtRzFbsUjTFLHL
      rVjF4wsz3Gl6xFxwnoWFBbTk73gVYkdZeStEVgnnjtfjTnexGAkj67/Y7VbsAiUiQXoHhlAU
      M0WlFXIjnNj1VmwBdE1DUzVUNcHYyDCLciVY7HIrtgD29Dw++3ypmdGbhxLqaKqGjoLZLEfL
      Ymd67Zrb3nKX0P/nblBdi9N87z737jUT34jKhNgEq64DzE+P8NU3d9B0nTndzdmjtbx6+KcZ
      UFExY9Z1VBkUv4IMil/t5fdkPdYTbQ3vCfoPr2d1Z7hpL3XnfkRipJXx4DSLKjheMTBGT4Qw
      2TPJ1MIsaAppMih+BRkUv9rL78l6rCequoYzNcoPr2f1mODianruN2NJzabuQNGqrhDPmazp
      1OwrIYGFNDlbJHaoVRFMJGKEwxF8o4O4swsxvS7oioIrPYOMdNdrniDE9rc6AItRYqpOcene
      1/71F2K3WHkdQNfQLQ6y02x4PB65DiB2vRUBiEwN8pe/+GsioTkOv/d7uGxbVZYQm2NFAJy5
      FfzLf/5nZOXm03nvOxakK4TY5VacBVIUhZQ0NyfPXeLVzdGF2F3kHgZhaBIAYWgSAGFoEgBh
      aBIAYWgSAGFoEgBhaBIAYWgSAGFoEgBhaBIAYWhrD4CuE5j20TPgWcdyhNhcaw6Arsfp7OrH
      4bCvZz1CbKo1j5bW9UVMljRi02MEcvNIM0lXiBdJV4jVdkRXiLelmFy4nHHm4mbKLApmRbpC
      vEi6Qqy2I7pCvPUyFIXaw8fWOrsQ24KcBRKGJgEQhiYBEIYmARCGJgEQhiYBEIYmARCGJgEQ
      hiYBEIYmARCGJgEQhiYBEIYmARCGJgEQhiYBEIYmARCGJgEQhvZOAdASi/QNDK9XLUJsuncI
      gI5naJCpmcD6VSPEJlvzmOBEJEDvsI9YdIH5yEFSbCbpCvEC6Qqx2q7qCmFxZnL18gUGB4dI
      c1qXH5euEM/nka4QL9uOXSHe+SB4797yd12EEFtGzgIJQ5MACEOTAAhDkwAIQ5MACEOTAAhD
      kwAIQ5MACEOTAAhDkwAIQ5MACEOTAAhDkwAIQ5MACEOTAAhDkwAIQ5MACENbcwB0Xaen4wlN
      zS28+4hTIbbGOw0WrazeR1tbN7quo2qaDIp/gQyKX21XDYoHnc7OLvYfOoRVUeDZgG0ZFP98
      HhkU/7LdNSheT4AKfd19sgskdqw1/2lQTDYOHWlYz1qE2HRyFkgYmgRAGJoEQBiaBEAYmgRA
      GJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAY2jvcDq0zM+llfGp2HcsRYnP9Pyym
      WjqMKI5QAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='avg by  month' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='count by month' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAZ2klEQVR4nO3d6W8j+Z3f8XcV7/sSdd9qdbekPmbaM57emaw3O2t7dzbZDbC7NjYIECTA
      Zv+DAHmQB/5TAgTIsxj7wPH6WBh27IynPdPtbvUhtahblEiJFCnxvqoqDzQjj0bUtMguXc3v
      CxAkUqrfIdVHZBW//JViGIaBEB1KvegBCHGRJACio0kAxBWg84uf/JSqDr/+2U/IlGvHfiKd
      StMopFhYT7XUstWsIQpxdnR24vO8XJ7m4ccP8I6M8CieoHtgkEZynry1m9nPfstf/tl9fv1s
      l821KH/6x++dqmV5BBBXQqj/GrGPf0r/9SlWYy8Zn77LSuwFvZEQ2d0MgyNjDERDDIxOsr+b
      PHW7ipwFEpefzvr6Jvn8PmGPG3soxNL8S0au3cBLmeR+DYtWQrU7MewhtFKW8YnxU7V8ZgHQ
      dR1VlQcYcbm1vIdWyiV03QDDIJ/PY+ga6XQa3TAo5vYofn6AIg8s4ipo6RFAr5f55Hefceed
      99Fy2zyc3+DGUBjNYqdSM6iVShgYzNyewdA0LBbLWY5diNfW0lkg1eZiqL8H9DqPn83TqDXI
      5P1M3Rplce4FHm8fSn2fuq6j6ro8CohLr6UA1MsFNhPblPDwJ3/6IWurawR9Dp4/eU7P4CiZ
      rVVw+rGrKrphyCOAuPTO7CBYk6dA4gqQ0zSio0kAREeTAIiOdmEByGd3WFzbBECrlfjNL3/J
      4nqSfHabxZUEhlbn6eNn6Bc1QNERLiwAuXyR9Y0VABSLlZvTUyzFXlAo7bG+sEmpkGd9cQPt
      ogYoOsKFBaB/cAir8vkgLFZ2t5NgddA7MIhNVfAEwkQC3osanugQFxQAg6cPH5DcSvB09imJ
      5DYb2ym6whFmP/s9icwGS0uLxHcTzMfWXqunTCZz+HU+m2JpNY6u1Zh7MUdN08lldljb3H7d
      CYkr6sJfB2g0GlisVpQzGENuN8H//vlv+M9//z0AVhZjJNdj7DYc3JgYJr4RZ2+vwPTtu9yY
      GD6DEYjLrrVXgisF5le2mJkcZTEWQ3H6CTkVktkC1ydGWFiIER0YoyfsO7JdqVLnf/5s1rRB
      //2fzRDwOF/5c/5IH+OD3Ye3LdQhMMSktcTCwgJBj5Oy6uTF3HOuTwyfSQjF5dZSAHSsWBUN
      1WrH7/eQ2q+QqcNob5Bnj+eY/MbbJJcXiQY96F+qBSpXavz4k5hpg/4396/hcbx66OmtVebn
      5gl39eGw2njyu08JdA/hjviwqBYcoT66C0tUbH60RsO08Ymro6UAOJwH/3V1rUEg1ENiex6r
      00m1WsXhsFIuV2joBoqioKrq4fsBVIu5hxqqqp7q6VXP0AT/+A8T6PUSpYadyX//Hw+/d+eL
      L25NmTo2cbW0FIC99Db1ep2dzB7F7C7dA8MEXQrJTJGpO9OsLi0zNDKKohw8mfjis9kUpXnb
      6c0HVIs7J26Xa6EPX3gSf9fNNkYnrpKWAhDs6iHY1XNwI9p1eP+EPwzA+OR180bWhpUn/4N0
      /P+Z0tbE2/9FAtABpBRCdDQJgOhoEgDR0SQAoqNJAERHkwCIjiYBEB1NAiA6WksvhBX2d3n0
      fJF/9c17xGIL5Ms6ARfkS1X6envY3Mng84e5MTF0VuMVwlQtBcAbiBAN76BarQT9XuxeO41K
      kZvXenn2bI1b77/D1uIiuq4fKYbTNHPf16VpGo0mxWtmVnbrutG0j2Y2lubYymu899YtDL3O
      v/zwJ9z/239LeuE58VSJmZtDzD6do3voGtPX2i27NliNvSAyNIXPqdKolVlY2mR66hqx57+n
      4YoSdWksJnLcv3e7zT46T8u1QPF4HL/XzUJsjeGxcVS9yvzSOiPjfcw9foIvGEFVVYwvLYxl
      9vpAFosFq/X40M2sPVJVpWkfzfSNTLL+2QOsViu6Dv2BEA2LhYePf0+4axB3qJ+Z6xXi+7VT
      t/lVer1CamsFJXqTkNdKPltkYznO1JCLj2fX+OCDPuaX15gIqazm4VpILv1wGi3XAn3n298B
      YGBw5PN7Bw+/39M3YNrArhKn8w/vTVBVKw77wa81GO5lZizEp4+e4Pf5eedO+7VFqs3JUH8P
      1c9vh6K9+N0xGpU8w1PvEF+L4XI68LttxOvtLyVgaHV2Mjl6ohEAsts7eKJR7Cqsra0x0Bvl
      4aOnTL11D7/L3nY/l4UcBL82g6cPf0u1VOXxo0fspFOsayVij57zwf17bBVdzAyHyCRWiK1u
      tt1LvZzj6UKcpfmnPJ19yvryPIl0gkQjirsQIxTppy/k5ZONKlPR9nfMpdgCj54evHlJ1yr8
      8oc/IdPQ2F5b4Ke/+jXVWoPJyREePPi07T4uE3mcfG0Kt7/xR3z5Wfd3v/vdw6/fDR1Uz35n
      YOy1erG5/Hz0776HYRwcm9hsNobHDx5Rxge/c/hz469ZwHrt5gyb6TQAqsXJzPQkoPHzn/+K
      Qn6PfE1n4dEs7q7Br2/oipAAtKhYK/KDf/5vprX3Xz/873T7eo7dv1FYZTH3wpQ+fLYA70Q/
      OMVPGjx79ICVpRX6o734IxGerMQIOl38h3/4R148f4y1uk9NVQnZ34xd582YxTnSdY3N/Q3T
      2mvo9ab3pyoJHqU/MaWPHlf/KQOgcOvefW7du0+xWMTt8fC9//SHd9HNzLwFwLf7R00Z12Ug
      Aehght6gvvt/m37PBtRLrbVnDX0T1Xq11nKSAHQyo0Yl/r9Ma87jvQFXLAByFkh0NAmA6Ggt
      BUBv1FiPb4JhkE5sUKhq5PfSxJbX0LQGiwvz5IrVVzckxCXRUgAqlQq7mQyGrlHKpciWNLYS
      aSIehRezzwkOjLK1sYZhGEc+zPbV9s+iH+Okfkzt5eS5mP1ru7g+LvdHSwfBbq8fp92KYrES
      DgbIAopFxW6z0ahr2B0OVPUPvwhdP3hJ/ovPZtF1o2mbpu6exgl9mD2Xk/oxce80zmkuhqGb
      /rc+ay0XwxULRZI7KbLbe9QdKgNBD2vbeW69Pc3C3FO6B8ePFcOZfcV4i6X5ynCKiat7KorS
      tA/T53LCKneqevZzMUw+BFRVy5W7MGLLxXDvfL4wVm939PD+yOcvZM7cvtNsMyGOMgxWY88J
      DU0RcFko53f57MlL3r1/H6OUZTWVJ+IweLGS5IMP7mNr55+BYZBce4kSGqMn4KBRLfDxJ494
      +70/wkWVueU4o71BeR1AnD+9UWNnc5FqcJKAy8Lj2efcvjnB7IsFGvs7VPQKfXfeZdC1wvpe
      g4mwreU+DMMgl1wkq/fQE3Dw+NFj7n7jLo9//xgXFVLFEnu72xIAcf5Um4Oh/t4/rNWqWnG7
      PeTiD9jah9xekoFINyX3MG+FWt/5ARRVZWhoiOznJyUbqHg9Xup7G6zt1kinE9x55z0JgDh/
      9Uqe2ZcbGEErtaSd62MD/OLXv+P+v/4rgm4by8sLbK6uUNFS5MZGCbha3011vc6ns0tkLPs8
      zgW5PT3Bz/75Z7z9/l/wYdDN8vICLqsiARDnz+b08ed/fbS0+y96Rw6/Pz5+nfHx11toWVVt
      fOujvwGgXq9js9n46C8/OtIHSC2QOAeV+XlKnzwwpS1rOIz/r//q+DcK25B42HSbr3sSJQEQ
      Z66+vk7hJz81pS3byHDzAJQzEG+9fFxqgURHkwCIjtbywljPFzd49+4Uz569wO4J4bbUyOTK
      jI4MsLy6STjay+jg8bf4CXEZtbwwlt+zQ7mwT1f/OOX9FBVN5fpYP8+erX5pYazoG7sw1nnN
      xcyami/Othy7/wzmYjSbi2bmXGg6F0XXaacIo6UAlIt59vb26OvuYje1BSjYlQbxrQrdvUHW
      V1YxDPWNXhjL0jifuZhZc6QozediKObPxdJsLiZeJVRRaL64WJu/r5YCoKgqk9cmsbl8TIw4
      sDjcWNEpVur4vG7yuX3cvkBbAxHiIrQUAKfLg9Pl+fyW4/B+v+1gISZ/IGjawIQ4D3IWSHQ0
      CYDoaBIA0dEkAKKjSQBER5MAiI4mARAdrb0AGAY7iTiFco1apchWMoVhGCTiG9QaV2tZDNHZ
      2gpAcW+HQt3K0sJLlpZXMap7xObmqds9LMaWzB6jEGemrTfEODw+ypvL5ItlurtCBAMBElsb
      DNwMUd3bfaOvEinFcCe78sVwq6urjIyMvLKoTFVt2KwKg8PD2PUSS+s73Lx9jcWns0R6BqUY
      rgVSDNeaMy2G+9GPfsT3v/99wuHw117OU7XauH5z5vB2/+eXvr17925bgxDiohyLzY9//GOe
      Pn1KPp+/iPEIca6O/Jv/8MMPsdkO3kNv5tMJIS6rIwGYnp4+PJCUAIhOcOyJ/tzjBySyZfqG
      xpi6NorkQLzJmhw6G5RKJfbTWyy8xpXNhbgKjgWgXm+Q20uBM8yNsYGLGJMQ5+ZYADSrm6DX
      QaUoZ4HEm+/IMUA+m8br8TJ+4y6haN9FjUmIc3MkAPV6lVQyTrZYZ8Luo7cr1HQjrV5l/uUC
      NneAgMNgJ1vk2vgwscUlon0j9EXlzfHiajgSgHD3AMy/JBBwsZ9KwsRQ0410rUa5UqNuFFEa
      VsYHIryYfcmNd++RWFpEj/ilFuiUpBaoNWe+MFZ/NMxvPnvKBx9+1OznAahXSvgj/VRyO9Qb
      BsViCbfHQT5foK4ZUgvUAqkFao3ZtUBHttpYmOXZ6g4DvV3s7Z18EOwKRHGrZfqGxxgfGaSM
      k5u3pqlldxibmGhrIEJchCNR2kwmcNmtGFjY2d6AmbGmGymKyuDI+OHtEY//4POY7PziajkS
      gLfe+YBcoQSAy+O7kAEJcZ6OPAVyur2U93Z4+PAh64nURY1JiHNz7Ggimc5w+84dvD45lSne
      fMcOnSNBP0uLi6Sy+xcxHiHO1ZEArC08YTOVJZFIkMuXLmpMQpybIwFoNHQaGvT09ODzui5q
      TEKcmyMB6Oruw+20Y7OoNBrmvkooxGV05CC4VNgnly9gtTsI+l99GlTTNDAMDMBiUdE0HRQF
      q8mv/ApxVo4EIBjt47b9YMf3uOxfu6GhaywuLWM06kSCblLpPOGRcTJbm0xPvd5l7oU4L0cC
      EN/cpGHA5MQkyitqK1Jbq0T7R9jdWsPtclEpZ/B43eQtiiyM1QIphmvNmRbD9YSD/J+f/Qsv
      ns1x6xvvcWP0pHeEGWgWN91eOw2vg+WtDNN3bxB7Pku0f1SK4VogxXCtOdOFsfxdfYwP96Or
      DnbTGTgxAAp9fQdvmOnuH6a7/+De23dkYSxxtRyLjcflZj+Xx+OVWiDx5jv2WHLr3n1mAFkP
      RXSCI48AWr3KL3/1CxJbcT59+PiixiTEuTkSAL1RpVqpsbGZ5NqknMoUb74jAbC5/HjsOtvJ
      BJuJnYsakxDn5thBsKHpNDQN3ZBLHYk337EAhMJhFEOnXpdaIPHmO3YWqHdwDKc/QiIt7wcQ
      b75jASgXsjyZXeBb3/7zEzcy9AYLL1/i8ndhaRRI75cYHx1kaXmdSM8AQ31dZzpoIcxyLADr
      8S2mp64xPzdP9P69phuV87uksyVCliI2dCaHe3j+bJnp+/fYWlxE7wlLLdApSS1Qa860FqjR
      aNAVDrGytsHAxK0TN7LZXfiDAWhUaBgG6UyWUMTDTjJFXVekFqgFUgvUmjOtBXr86DPeevc9
      rs/UefDpLDDcdCOby89IXx3D5sJtg0y+wlAkRGo7yeDkeNNthLiMjgRgcqSPf/rhP2FRDO68
      98dfu6E/FDn8usfhBqC7V1aUFlfLkQAEekb4u78duaixCHHuzHtyJsQVJAEQHU0CIDqaBEB0
      NAmA6GgSANHR2gyAwW5qh91sjkatQmYvh2EYZHfTNEx82VuIs9ZWAPRaiaW1TRRFYWlxkb2d
      OKuLi6QLFWKLK2aPUYgz06So4tUUq4Ohvi5WV1bxeVz09gR4/myNmfevsRVblIWxWiDFcK05
      86tEnoam1dnby+FwuXDaDBZWt7h+a4yXT2YJR/ukGK4FUgzXmjMthjv1RjYXUzMzh7e/uJrw
      229Fmm8gxCUlZ4FER5MAiI4mARAdTQIgOpoEQHQ0CYDoaBIA0dEkAKKjtfVCGEAll2Z9t0bY
      pZPMFLk+MczCQozugTG6w3JxDXE1tBUAQ9dY3UphYCNb1xntDfDs8RzXvvE2yeVFuoKeI7VA
      Zta1AGia3ry2BRNrgU6on9FMn8vF1QJh8lx0/YRaIN28v8ulqAUq57OUylVSmTTDfV1Uq1Uc
      DiuVcgVNN1CUg8WxvqhnMbOu5Yv2mtUXKZhYC6QoTfuwmD4XS/O5KObWAjXrwzD5GbCqqqhN
      +lFNrNFSlBNqy86zFsgd6OLeW2H2cwWsNEhmi0zdmWZ1aZmhkdHDojQzi9O+TFHOru2j/ZxH
      H837MbvrpnMxfXrKufRj5t+l7WMAFJVAwA/ARCAMwLhcVUZcMXIWSHQ0CYDoaBIA0dEkAKKj
      SQBER5MAiI4mARAdTQIgOlpbL4TpjRqLsRj7ZY2gSyFfqtHf2018J4MvEObG+NCrGxHiEmgr
      AKrVjsdlJ1etg8XOzWu9PHu2xq333zm4SqQsjHVqsjBWay5FMVyjViZXqmHoGopuML+0zsh4
      H3OPn+ALRmRhrBbIwlituRwLY9ldTE3PHLu/p2+grUEIcVHkIFh0NAmA6GgSANHRJACio0kA
      REeTAIiOJgEQHU0CIDpaWwEwdI31lUXiyRSFvTSx5TU0rcHiwjy5UtXsMQpxZtoLgAFdPf3s
      pXeIJ1JEPAovZp8THBhla30NwzCOfJjtq+2faz/n0YdhYPZ0Lq4PA1N/aYa5f5f2rhKpGKyv
      LjM8PkkyvobdZqNe17A7HKjqHwb4RUGX2SvD6brRtE0zd88vj//I/WbP5aR+TNw7z2suhqE3
      7Uc3OWnN+lAMva3lh9ouhqvWNFI7KSIBD2vbeW6/Pc3C3FO6B8ePFcOZvTKcxXL2K8OdtJqa
      6XM5YZU7VT37uZi/MlzzVe7MnAsnrQzX5kp6bQXA5vRx9627h7cjPQefZ27faWsQQlwUOQsk
      OpoEQHQ0CYDoaBIA0dEkAKKjSQBER5MAiI4mARAdrb2L5GkNXjx5QOTaN6mlV8jkyoyODLC8
      ukk42svoYI/Z4xTiTLRXC2SxMjLQS1YzqGkq18f6efZs9UsLY0VlYaxTkoWxWnMpFsbS9QaZ
      bJac04+tXmEzUaW7N8j6yhqGocrCWC2QhbFacykWxgLwdI3isVgJDFynWKnh93rI7+/j9gfa
      bVKIc9fe2qCqlUhX1+HtgM0OgD8YNGdUQpwTOQskOpoEQHQ0CYDoaBIA0dFMC4BhGOymdqib
      eM5XiLNmWgByyXX2Kg1iiytmNSnEmTMtAIVCnb7BPmyKPAKIq8O0AHQPdPHyySwOr7wWIK6O
      tl8J/iqbO8jbb8nOL64WxTiDJdV0XUfTtMN6Fl03yObLr9zOgFOt7BP0ObEctq0f9lOrZNG1
      2is7MTioKfk6VpsHq917rA/d0NkrZ185RsMwTlWbFHAGsaiWY/3U9BpVrfKqXk41GYtiwW31
      HOsDDPTa3ivHeNq/jGrzg3J8LnqlglEqfX0PxkE/r/ydWSxYAoFjfaDXoX6Kfewrf5czCcCx
      wZ2h8+jnTZuLoiimFg6e1M9VmMuZjfDEyRsapdKr/rOZ0M9XlIqlw4UTDa1OpXq8pPZ1+tAb
      NfZyBTAMdnczbS3SeJp+tHqFSq39MmZVVU/cYQy9wf5+oe22v9rPF+qVIsVKnXL51f+hv6Br
      dWr1r5/n183lsJ1Gjf188dj9hmFQKpWw/OAHP/jBqUdlBq3Ei9gW9WKWYs2gUsiyubWDw6qg
      21zk9zPs7myRq+jotSLp3QxY7JRLRRwO5yufupxk7sUcNocdq6JRyGXY3M5jd7kpF/M4nc7X
      nlYjv83v5rcYCDv4+NPn9ITdrG4kUBUFu9NJbj9nSj+V3TVW0lVcLjfFwj576W2S6X28DivL
      K2t4AyGsbS5FmNlc5eXWLr1BF8U6lIo5Kvl9VuJb2FQF1WYnn9snvrZGQ6/x248f0tXXh8P2
      9YeS2VSc2MYupUIWn8vB4soaDruFumGllN8nk0pSqBqUc2niiR2yu7tY1TrP59dxuN0Usjvs
      5qsoWpV0Noff5z31nHY211neStEX8bIQW0FXbVSLe+SKFXRdM+8g+LQMDhYyzRcr7CYz9Eb8
      dHktbMaTdF0LkUpuYmiQiu8S8TuYvDnF6vIqqtVG4DWqTVVVIbm9jb3Lx16hisXuI7mxhGpz
      ETSpijXksRFbTdLb20U+n2cvtYXDbiW9ncDTPYIZvRhAvbhLthSmsJPEoqo47RbmFxYAhVRm
      n8HuUFttr2wmqBQqZPe8lNQQpUwCi2LDazPYTiToc3vZ2d6kVNbxRewMDg7hdzte2a6iWOjy
      KcRTWawbW4yN9LK8nsaibqNodeLbefzBIj63A4teIRjqYa+wT9/gKOnECulkFps/QNFhYezG
      dEtz2tjcpFSus1+MYPf1kN3ZolarcnNqmuWVlXMuhWhUmZtforu3C03X8Xg9+Hx+HE4PwUiI
      9YUXKBY7dd3A6/EQjnZjt9mxGRV8kZ62l75Nxlexun34HVaWN5I4nC5cLifUy4R7ek2ZmmJ1
      0Nffi2aohP0e6vU6TpcHX6ibbK5Af9j92n1UCnvENvOMjwyQWl9EV2z4fX5cbg+90SgWm4OA
      t71+DL1O98A4f/Kt9yiWdTJbKzQMK1alwfrWDh6/l5XYAla7B4fDSrXWQK8XyJdecdIBsNld
      dPcNYjMahINeFmLrRHv7aRQL9E/cJBp0EQ5H8Pm8eH0BnE4HbqeLVGIFp6+brmiQcDhMKBLF
      YWvhTTyGRnf/GO/ff4fCfo742hIOT5CuaA9Wi4rH7eb/A/AVcABzPo75AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='count by stations' width='192'>
      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
      1xNdIf5/7k3wGrZPfw4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='count by year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='deley count by station' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='subway line' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29e7A1WVUn+Ft778w8j/v4qvigEChA2nCkS+hBoTF8UDSIhkr4GO1wBJtu
      FKcVo1vHiDYcHWcctenoHjGmO9pRtB/oOB0aIjrTrc74akAExPZBN8IotiIlWAWFVd99nEfm
      fswfe699dubJPCfP695bdK2IW9+te05m7szce+31+K3fogcffNBhCyEiCCFgrYVzDkIIEBGc
      c0v/n4pzDsZaAA5Kqvj35nnS72tr4KyFlCqcz8E6h/gtIsA5OABSSEghtrmlGyPGGP9snYUQ
      Mt4nP1siqj2jT1Qx1oT7FSAA1tl479b65yB2fBYKAESPCcMTOb0YLwKeuNZaAICUElprZFnW
      OjghBLQ18TNjTDx/cwEAgLEWNnxmrIG1jgcQv+sAkP9Tr/s5hBhj4jPZVlIlIEjAOb/wAa8k
      rLUQQlzbPe5LUkXZJfxu4zsOc8TBwTkLEgRrbVgg9e/IZB41lXA6vxR6SttE5htou8CqVckr
      18GBQLVJz7tGeryUAiB/44CfCLJloXSN8yqkTUFsKzwpDE94svFvjwXt75yDg4OgxeReaG4b
      v7NO2u5TGwOQV3RKSDjyO2WlKwBe+abXjeNJ3k963r2pEd62lVJxAq+6Sef8wGxjSy91FUyk
      hfANaa0hiKCEjFoxahISkEJACrmvW9pIWPPvOjn5WVC4TyEEhPT3xM/3pi8A6yx0sqsD4V2H
      3avP5F917nTn4J0yV5n/m8OSckyfaVN67wDrhG+szeZvNWmcRSYUSl1BCgFBImo8R/4YWbtJ
      CotFIMuk9yWMhSOCDJPvum3/Q0xMIoJ1FrCL53oo84e18y67DPt4hIVZmorWOppwtqHo0nO0
      +TpEBCUlnEPr7qLIzy1tDQj1+dN1P3tZAM2Tp3YwX9yErQsO0LoCosMctjWY2kCds0g3KCkk
      ROYXGcVzC0giSCn3Pvm8bXm95gYRQULAOcRneKjx8MR1cFBit+fJx3eZqM45KKWgrYFwHaaO
      NYBDVGzp+LrGJkj4KeMA4yzIecW5cqxb3WGQpra31kKG7ZrtPd72jLNw1sUbyYOD7MfX35ZP
      J+YhNX6qhfapcdt2xK7vGWO810OApMPubtoG2xq73W8f/w9gc1bAGA3ZseAqXfmdQgjYMNeK
      LAfQ/RwFCb9IXHCQ15ilnQsgnQDNwXfdGE/+9G88gRQRbIjgGBg4hyVbv3YslncV5xyklNEG
      bF5vX9I05fpO2k3Ov+58xhpURodnJw+yGFORtJhkVyXO+jCvNhpCSCA4zkQESQIVFmaZkhJK
      ev/HWAvnbC2MngqbSmuv79zqHSB1WroWgjEGAFonYy0MFcwdEn5RaKOBELIk1B3mLi3CY1FK
      ddqP+5RdnDV2+pqTtu9CEuTtZB8KredH2Ifa1VSpXU+I/UVENrimA3yug4Cy8gs+CxOb71lJ
      FR1bb0HsxxQkotULoKltVmmu1DTpCjvJsJVRCIGKJH7buFBcWM2YN+8Aq6RPjHmV7NP23/Y8
      bOKxcuAd1gcKTF257Hita5WQ2NTGQikFOIfK6OjveM2/bFmoPUX7Vi6APuYP/z1NgrlkAjdN
      I0GEXGUxEcYLJxXrHKw1S1opjSOvkrZI1Lr76LqvPrIqSbjLpCQiWLPIAdgQXZFiYRJpo2Gd
      i1rzsSbe3GG/UXif0Bg4Iqgsg7UWJuR9Ft9fVszp+TYRsWpit2ny5vf5O6sSQWlIiydGrjIo
      sby647WE3yVSu7SvVl+CUwCojF57XF8pip/HYPB/gEjHcbXJLpPfOQdrlsOSPsauYzyc5SpM
      wkOKFDLCGqSUyFQWfATh7ze5vza4DAdcNhVVFAXKslz5pXUvshmzTbU+LyTd4u37rUyByGfy
      2uLGPu29MGn62uW164AjsK7d5Oo4Pqbek8WdZe/HaPT1IAKcu435/Iv2HiVq+g81HwIEKSRs
      Eu+ma4R/HELiXHIBI2YtDJnOe2wuhk0Uj5rNZktJrC5t3yVd0Z84KADWOlijoaSqxWZdALVx
      oqvtxlKcUKW1f+EbhAWJfO5cG4NM9r+vdBdcmHr3wLmnwrkpjHlG7zGsk+ZOygt+AYsImVXy
      mU8lpQcJ7iFuf2Ml5IiUyiCl3wm8b7R6vm0i0XBsM3mA/hiXlSFS+DCWsX779ludaGR6Bawz
      MSvMPgKHxQAPk/A4INmWOlgpgsjDL3ruAqlDn4oxd+Ps7DcBaFh712aD6BBGwrZdH0h2Becg
      gPCcpMfCrEgM7SLrTFrr7M45g3Xi3z/BWAMhfQBF7vlea55TF7BtV+HtzIf2CNqaGMng3UAI
      AVif+LHOQYTJ7/2AOhR2XXavKT4MCx9l2GbsDbH2eOPzbCpNgCCRQCZaNF3QkkS4UhyUh6M7
      HDJ4WtPsLuDNDrkA+KJtv6+SPnaX997DZCcBC1vTw0SETCqPIxHeHDJx0iOGAyVtF1m5ySZC
      V3AhlVVZbyJ4wBxRDTO065hWfUY+bXxwESQwK+cwxiDrqcDSHbMLNRzPv6+B9hmUCSEtHlBl
      dHzRlfbhPCV9NEAGJCSBIOBxMG0h0z7STEZdlbSBA9sk9bnYAd7E2ZdCwoaw81VFg6QQO8Xi
      +94nZ/yFEJBKYd1TYfNMW+NBhGvkSoLHLiQ32LFT5O3XKoTzBDze3/8e7H6EfIBz0M56uLPc
      HW58VZJGclJfos9OmZo+fcVr5eVjTDAr95U4Sq+3ibTd/yrLgTO+vEhkQI/28d+ccysBeans
      ZQGsW8VtLzVODCTOToBL8D0KIWFt5SM+5JYiPwzVuImSRnXSKNY62SUBZ6xdspHZFMA11Unw
      GDizm4bHV2G5rLMotYYLSoTPsS7hR0SdGKE26fXNZihwGy3cFqqTQkAbA8vRnoaT53+lGDVq
      Cj+Y69oViGYYjb4XADCZ/E+wtoif8bhSk6QNG7SttL0TIhGzxbV31fhumxwa/p3uhH2uEbwM
      WOfgrIUVHvq+7/FttAOsSjmvu7G2zyiaO8t5ByKCs6vNhus0h5xzyPN3oSjeAACoqi/AbPai
      Zec1QEPSov9mgm2bBdF8Xh4yoGP0iBziBBJEEVnaFkTYFTvVR9Yhd9NnxPUducpQJrCaNoTy
      rtJrATTttq5BpJiNNmk+aO/AdWf3tDF7w/zv4yU3oQdV9Rxo/UIAgNZ/rdN+bzrvTUd1Hy/V
      F4N4ramNQZ7ngF3Ywj4A4RNnspldXmOO7Cq9NH6LrySEQKYyn/wLioOTYQyfZuW59dgefPBB
      t25SSCnjKuwSIQQqo1fW5TrnKU5SMJN1voC6adv1ueYm0tcJXXV8W4SFs7Wr/KCuY9Nz7Eur
      ccCBIRIcCowlpwFGvW9tn2XvxnD4j1CWX4XZ7JVbjz2VWlQM8IGSsEuwhUAEZKqdfaSP9NoB
      xuMxzs7OlgabpuuttQHK6otdWHPbEJZiqINzDtqZmj3cVu3Ek6pNW6b/9n2Ru06wpvmXavo2
      9GlaX8uhvFUmJBEhyzIwNGVTYXBcfMYBeyWl9DkVq2vj6Xu/fZ/bYPAjUOptEOIDmM+/tncY
      N5XozCdQeN6douUh/EIGZ6Pdbu+1twmklILWuvY3/vtwOMR0OoWpLMg5VLqC5gdHC+y2h0T4
      S1YIYdGOF1KWJUajEabTafxbGjc+hMO26qWnE70J/us6D7B4iX18pMFgsBaY2HW9StfRrr7Y
      xC+EtIBIyeViovT589g3jbDN56+CEH+KsvzqrSb/0tiT55X6Bz6h6hOpAOApUg5sAhVFAa11
      LzPIWOMjOwGzo5Ss4XlYtDFxZ2gLW/G1soAJz/Mcs9lsyY7fZyRoHf6lbyRs8bIcjo5eB6V+
      A9PpD6KqntN5XSJCnudbLQBggZNKnw/fj5Kq9qyb7zG1/9P77HoOwHolsU9pWgLMD+WBkYRB
      XnQdulZ6LfH5fN7LHucYbJHlyLIMQorOgmfBmUTXnb3kl0lEqKoK4/E4ss01HdJVNnbfjCyf
      q+27bDr02Xn4cyknKIo3QKnfRZ7/bOfYePzbTn6+Zjo2diCLPAcByFVWK6RpjrXtPtvGqkOt
      ctszOsTk5zFxNtjBF5EZY0INwWbmoj4r8aF//ru48+6/AHAgKAQFs2eV88cJm66HJqWMFIv8
      M51OMRgM/PGJadF2Hr52URQYDAbxHM3vdC2OVZ+tk4UZMcZs9u2oqpdgPv/a2nfy/DcwGLwZ
      QpjWAo9NryuFRJ5lODk+gRACo+HI2//h+TOUJF3gm1Is1vyetaCE/YtfnP4H4XcpGVHQbzx/
      9k//Az7wP78d73nFv4Ur7X6hEE3t0md1dm2bafYwFkcrhaqqat9Jnc02qaqq1aZsy9CypuFJ
      wsf0idI0fRP+mU6/BcC31L6r1AMYj78awBwAYTr98qVzNc2QPtcXQUsOh0NoXUHrqgYd2OR8
      XRL9uQPkYPo43h4VEACVgR2COVRB60O5R3/1NsRA4fg5TwTJNUXx6aDWDaxtK+2ipnAh9JlW
      ezW38LaXpZTCbDaL5+liMuOFw6ZTakp1Xa85diLaCJSWRsXWTQ5rx3DuCSB6BNbeE8mBmfaw
      ed8p31KXsPlpjEFVVbDGAw9VwpW5j0l7iInPUnGMn+9/Rb1BLTpUhvc0WH+Ne/6bT8Xdn3cv
      5GkODbveCW7TxM2BbBKR4Vh0NF2si3gPpVQtXJgW2mdZFrfxdGxt1039leZk3+QFbhIKbEu0
      rTpeiEdANIExT42mWbNeId3hemVS4TAcDCGEQFmVPjustWfSc9g7ln7fUhkdOV77yvzDF/gP
      L38TiAjP/8WvQnbPyNeQWLeSG8g5D7ZTqzK7LGlCgl/E9smbRomhq09W1tg8GZxzyPMcWusl
      f6KppVMndRPzpUu6jrOOGe8W4d10cVnnYGIyih3i+svw1WR39d41+ozVao07Z3dwenK6gI+H
      yc/PCqhXxR0inLytMA1Mm1QPT+Eqi/yTxrW/T/7zo5h9yOeoJn96B0dPLHyBEBCpd9p6CBB5
      GPlaE4gnUfNv2z40QQJCcpLMQgMxF5CaKGnPAI5JK6VqkZLUjq/5HgdGiBICtCDkMVKoMWsW
      B45UdDuazfh210Lofz+ETGVe+xvjTZ9gwRmjg//EtPQhSyzlgll5RyGaIs9/FcY8B1o/c+Pj
      u3zG8qEJ3vU5PwlbGjz/330Vjp77xPjZrc9+Cj71dfeDBOH0rz8ZUL5unKOMq+apsRZqk7Be
      1/9vKtbZmLFM7e3Udk93pvl8Hs2gtrFdtRYjIl+d5JaVASULorQVKqORU9a6UK210fzpYtbb
      ZHcg8nyala4i9ypfhwuO2LxwLqAs9/jchsP/DYPBD8DaZ+DOnd+B2zRL64Dz3/8o5FBh9Gl3
      xz/rR+eo7swB51A+PK0dQkrg3r/71xanCKWvfbhUleyxA7TJLpONyJM9oRZS8+LcAgmYCmsn
      nixNmMF1CEcj2oTHnykFW9nAfl2f0E2zjT9vRsU2edarikWUVCAV8hxY5Aqs6e/orxPnjmr/
      biqPvvMj+J0v/1mQFPjs33oVBk/3tdej/+ouPO+nvhRmonHX/feuGYNddCjqURewdRh0XcZw
      lWQq8+aP9maOIIosvjHh0ZgEXotVGA6GMbTJn91UYQxQVVVw1i5Fefg7vAhGo3+CovghzGbf
      g+n01RtfL0bLpKqZE2m83wob2wpVVQWl1lNN9pXp9Juh9f0w5pM31/5r5O6X9qOgESQ8aqAR
      6ua8hQNqkPBeUIim8HadRj5OTk5iiLIsy7WO9bqHztpeyAU3PJxDkRdxAewTRXkocc6hrCrf
      ECSwG6dQhQhXUAonJy+ClO9FVX0+zs9/eqNrsNgQF1/3XIy1mM89tEQqn73vk2voCwfZShxw
      /p6PQg7qJtAmoo2OBGuV1rFRB7DYgdPQ8FY7QDO06JzDZDKBMSba8X0iS23nTbOVznnEH5dN
      OueBdlmeRdrAdde5Lkknt5QS5JYbefDv/N3p9B8hz38a8/lrNrpOigHqS41CfgB+DEk2XYdQ
      JBeUM3wiHfPBnjkBx//1k3Y+TRoG5w6TQizKb5lhxDq33Q6Q2rFdGPltHhA7woDv8NGMqwP+
      JQ2KAYiAsqoig8RNk0gCQL5liQ3Ydea4BzicGuLRUm51H+k72OS5cx8vPrbIclhnMZlOaw67
      xxLVeV1XXsM5PPSm3wUscM/ffB5wDT4a+1wu5psIoGB6WxOJ15xb0x8gFU5UMRRhHTiOX8wm
      L4UnvHE2ToYmLoYAzOcz5EWxMm58neJCtIV3Q2bE49gzKw8uYs93KOhgv2nzMSKyy5lAIcKZ
      17QEsdQVBlnR+z2e/faf4r3f+JsAgMHTTnH6OZ+y8dh2lUUCbPFcvCUR2PVoAemoLQDP2bO8
      7QFAnucYDAa4uLjo7TT1sSnT77Hzq0jGSjH+3EePTGAkI8xnM+RZDhLXtwBWRWsIFLU9eQW0
      dE/XyemZZluJKBDtIuLrHTybHmeYVU9NXjz1BMWTJZwFiqcdnkGvrwTSGA+9T/0YNoHYvgaF
      F4duqGwTTLZ0sY7wZPTI3aKx9qooUs25szaaFZlSMMbWYt1XLanpsS4cGxN6LuBzDlCSuKvw
      DlBWJapAtcg7mZ8Py0zVXWLOJoBzkKfjtd+9SuHFnCkVfUjFdig3IuAv8o03T8D9gJvxapZ1
      W2XqQK17mKmTqK1BnmVxB8izxw4jMmeFrTULx/OGCUdF8iyHEBrzsoSUEkVewDZ6/q4TeTI6
      1DB3EiKCMwZVpX341zoohhw4IEYDmGZPim5vvwsisW4AWznHzoYssIPE1Yc+UyeThe+/D12j
      N3989juXN7vRNQULQEsTG/VlSsFZt2Dxe4xKqT0UhGChjc8HCBfsPIInWKWQlOrLYnYVUISI
      /baIEIp9yCozro+wA7rq3m1wJNtwQdqYGLHodz0NKR8EYDsjcPsQIkKeZT43AF9T0VUAs84c
      vkmSSQUpPBcVgysjWkqECqz4rxARrsByndADZy2kkrHmOPUn0rzBJtJ3Au2ywF3Ia0RbOjmP
      j0r0hyKMx9+Ok5PnYTR6PSaTCS4vLzGbzfa+ENhXcViUm3LP4jKgdVPh7uw1mPsNXBAchUMS
      bYxGPm/l6Q04cjEceZ3bdtS0wRHTWkMIzxvtrMW88gjRPMt79Yfd5vpdsgrzD3hyWiBkzxvf
      YYLgPuJxUu8BUQkp/+MiMVhV0FpjNBrtTTkZY5fuK80CV0bXyGdlIEOotP+7Cdnovu/ChegY
      YdE99JDiyyedD/jEQVgLzbZuAnUAbgbeRpBApauEatDBOm9aWOOdS+cs0tjvOtkXG9qq5xRB
      byEj2ZRVodB00jnncHn5I8iyf4fLy6+IUBE+/3Q6xWg02su78tnh+v/bZCcTQqDUVYR2lFUZ
      a3KttbGv7yZirY0tdBkufyjh+wEAeuDPH3BthSZSqZidvAkLAOBUvYFzvhiFC1PYBMqzzFPp
      bXFeY60vuN5C+5S68mFjIZZqAzw8OTSAVqo1sua734h2ZudGMlFrjclksjQGTlQOBgNIeY4s
      +zVo/dkw5p6N74dpFNNxpG1vGT7hc6wUG1cLokUYnbbrWBN3zANn97kyUSiVYTgaIctzXz0U
      Jn8za7mt7NNJ4u3WhoklpUSe5SjyAkVRoI1BehPRIdG2iaTavzmBiXyBCnc2ifyc4RgTcPrO
      dSKro7TZ+VrX6Um01pjNZhiNvgvj8WswHn/dVsqLD0lD1s45n4hkVGtYlDz5lVIo8sLXJVvj
      fYgt3rkvcD+8U82dY5QQPsNa5AXyLMO8LHF8dIQsyzCfzX2BNXx2dhtZ1d+1KX71dxPmLgYf
      0vecGSbPquZj7W7j2lcf+pOojMflQIjeOwEFKMPKz7M87jLGWmgX2v0E21d0ZLPbMs1p1Ilh
      C2ktsd8NF7j8bSaSt8VRU34+OxyCESEZqsPOBiBi71mDb2szREcV+9sNeJdd6i4JgD7yFx9x
      nJwZDAbIlMJ0OoMgwmg0wsXlBSrteSa3cTDTHWBdFElb4zOIa+zieANEMb5e5AUm08naUjhG
      AbbVifoQq4VzOIgzzddn9gN+LqvG3EReel/gMh6bVpTx9/JcYjz+/2DMs2GMZ03bNILH52dT
      IfpaAKRU/j2EYQkhUGQ5AA9BdvCFTbt2pTHWwloD2Witu6nwM88aUThtDOihhx5yJChmgRmj
      4uB5Zo7GR7hzdid259hmS01j1uu6ghhrQzPo7t2iLULBgBvGMZVV6RMdjZdeGU/xyI4aT8QU
      oAa4jbqMbCqMxGRZxajN37ehV4KSMkLPgQWRQNp5hZ+LUiqYhtvnangh+CQSYvfOtiSotf6+
      HJzPKNNyhdum1wa8YtwFN+XJgU3AZ9V9NMGQ3fjQ4vbjqfrm8xmecNfduH33E2ADmo4P3uTG
      +uBICH7xrTOBlhCi5KFOzljoytfEImj6NDbNTjMvEG10jVWCUZF8jUOJZyoIFW3oLgZ34cX5
      mLy/l7awqVKqVocRJ45e9GXbBW0qQg6jyHIfalYqvs/0vXpFstiZh8N/gZOT+5Hnv7r1tf27
      XTCLb/VeosJctiAEa2clZNTwKSZoXpaRkWE8GscXou0mGcx+GqhvZnndYhKh3G82m4KC0+wj
      MosJr6T0n6UEXeBd5fBRL65KsnC1iEsqvCOysJZtVhtynoQnPE/68Xhco5fZZVGrNRlvHocg
      ERodEorihyDlf0JR/Hjr9/sESFyI2RtrUOpqo3mXjstngZfvQfFD5ZXONh9PQmYuYBp0wOHs
      /NwPrmfX9auSuiby46rKClLJWCaXZVnsP1XqCkWeo6wqAGbxcOhq7s2DsxwgO/BWqL+bVfmG
      FKXLGn9TrNYu0rweEWE2+w7k+U9hPn9t/Hs64Zd28YbiY/RvW7fNNnzWqrF1fvbQQw+5JqEU
      b7npCcYjz8wshcD5xQUm0wkyle2thdE+xTqLeVnCaO0dtuCUZco7b6nJ4UJGcJHokQtqvgPn
      PzwWSNeQt02HN9reyQS3wdTj76TfTydGnudBad0cSXMbzbED9UghByxcyJOwOeusg4Wvsd7V
      VxPpquNB+JY6dVjE+cU5HnnkERhjMBwMriRWu60IEoGiPY8hOwKh1JWPuSf3zDiXLMui/7Gt
      w7ipsE1qQ5SC8wSp35JnGU5PTuohyZawKe96KblvWZY7Ua4fSlKFm/oRvDjSnY6VAzfm9q2e
      jOc+3QBImPp/tbGkf6yxlAWOxjgYABahoEOpkNxxtTremyRCCOQZN1gjaKuXogAcl5fSd1rf
      F5am+SI7x0gCRZ7XbOFKa5RVFdnlhoMhirzA0bi9uCRdqGn0h9/JdDq9Ue+nTeGyEuDSUd2B
      j+IFsci79FNSrFy0NUs+xBIznHUWsIHThiQQUt3MFgD4UObdd9+NRx55NI6jGa9mWWW37lOs
      s2gytfkkVAYgg25McI6wsMZsywtsIvwSbeJDrSJm4goswgJW4MhFbWec7/d7cXmBs4vzWviY
      iEBi0UYWCA0xsizWbXOOQCmFyWSCo6OjK9nV+go/J+aGAhDNbmMtulKLvMsVVMSs+qr7ciHn
      IxPoTHqMak4YbQwgKJY9eBvfwVh/4UHhEyuCBMbjEebzeXAiHWTDfmWHbF/CGb0u3hvfHdEv
      0OZ3momt6PME2K/cwpZsTvomdKAtiRWPcXVq91iQRP4YzrwTCcCZWnMP9mMM6oxzafMQ51yt
      s08zY3ydwsjR5jtM5+GqHmVEFKJoKQ6pfU4QUVDkdV5aFlV7QR1FD1JI5MpHTT728YeRKeWd
      M+dpPvjBctuaeL49+AjWWhhXp0Tnm4iTTAoIITHMstjLzLrVyRPWBnmWRb9g092qCRprHpc+
      Tw4upFigeAx5OAoEAZbgkkq8GJji/4dfFFZRzbRhlGy6GLjtkjEmYIRGEMI3+DbmGTDmab3u
      c5/CSUC/6JcjbXyfPLF9CWx7TYYQAuT8eSqtfVehDRXuAg4ds6DBF2gkT6SQyKQHoXEmFeR8
      wilAWZvb9K5wYy5+kUJGpKYJdhz7J4LbADmgclV8CAxskysmsxQCWhsE2piYDxA9sUCebEl0
      FqRYn2kMkz6wljVCgDxhKWzTzaIZzoqzhksXT57nqKoKRBQzvouxCYxGvjaXqdJnsxnuvvtn
      MBp9G6x9Ks7O3gVrr75+l/NNDLFoqkmOyPE9V7rydI8tCT0iD932IEkL4Sjsrp6NY917rO2J
      qS3Wtjp9yGkZpuDj1QYSy03YdhEp5NKOwtrD8957hKIUEiBAOILWGkUxWBnDj+E1eM1ZVmW0
      l9mBtFjdYAEAhJCQUmE2n7V+7p3aCta5mEnl5JYJHPb+pQpIJVq38XQL5/8HEMe6iiNVCN8u
      aTKZ3JiIXUoqLEnGXEcajtaht4IDom/mGa/b6Rv9Lgo462IxTuwov6a2oLYDxFCaWBBONc2C
      9knhV6ENq5nxIrUB7kHYzs4z3zBDUh1Dw9rUWgtQ6CuA5XGkIVwhfCSmLEu/fToPxjPGRAxK
      53jsQnt1LXwSAjklYT8ISOHgGnH/vs+oaT61UcanIqXEaDSKNvVs9kpY+ykw5hnXov2bwg69
      gO8AqY0GrIPj9xd2xkp7poo8y1otCxF6BxtjILLA+9kDjBcXQAqG27QIRoSIhy9nowg+QtgZ
      KJTH7RplSUFYbUA3Pxa/+j0zc9DmztYeBif6WHNUlUYWfIHZbAoHYFAMFjmEjnFzMQgXgnDD
      jNRUkYk55eEWC0fYF3VupiDSxdvXxEyfk7UCZfk5va93aCEiWONgrU7mDYDwexossCGU2WUK
      cVKMTVKfZFzNwUQf/ehHPWlceKjbIj5TYUJbDsexZm47d58wVloFxltblmVoLzJMx+EiKSpC
      yNAYb/OrzDetYFMkxcBroxfwYlfvrdWMbsUJSYjmGcL5eDGkOw+HY9vCrn3Nx00jbE3zp+26
      +47YbSJpBtsXCfkst5SyxuSsjYk8qk1fKRUbgxOLmuWu7ypvLvh4tJTrSa36PISrg0kAACAA
      SURBVCgCRYeP+4p1hQX7QF2lknDWh7CkFDVE6qrjBPlmHBa+z1hV+o4tWZahLEuvNZJrG2tC
      SNefmwvx0aJt0t/5/wX5tkldiFYbFkrbZwwy7KOA2iIi677fJpwL4Xe6T/9tE0kDJjzpuWaj
      FiwggiPCvCyhhQmJTngnONkNeYfg8HRlbGfRkmANKGW/yMe6BWKMQVmVtY6OnHxohjNNADll
      wa5rg1cURRGTGbAuLqpm0+su8Qk9gXJewjEtHgPMWrQz3+Oi1ni5XrrrGTCOqCucDHTbpbGo
      3LVHlA4hHJJkWvWbkihjDv80Qpb+LsL7mc1nmJcl5lXZusuxP2hW8C9FLFBqp7JWaL6MPpqn
      2bWb26DyguBaURKELM986WWg4ePJzRO0KAo/0V1yUyRq0O0+wtsg2PYOD5HrTxe1uaEwBovd
      Y52ksAeiEDromP8rx+vCjnZF6FopH8Zw8HZkylzJxM/z38B4/L2Q8iO9j+H5VkuQJc+ZglJE
      NJMX/pU2Jkbg/Oe6VbmoSIKVXBQhlpomnfpKCmoiIMIkgEU8WkqJTGTQZRXt4RSPREQYDoeY
      z+cAlk2GbV4YO/cyOZ5NMBPGmiabNPfXXcMgn74cfvhd5Xuryvp8dO1qtDAR4ejob0LK/wil
      vhWXk//x4NcbjV4DIR4G0R1cXLx+6/NIIVEZ42si2GJwvgsm6w6GxfAx2hh4PMOyiDaP2k84
      WrGRdw8wkx4oxxQl3PyaY/YmtK3RWkfUKRGFflX+u0VRHATA1dzBfIx94UpHH4cEVBh/n8xi
      M5TJO90mneY3tev3KYfedTwu6cVw7ghaf9ZO51KBsDfLMs9fRT4nJAPUnRdEyyBgGiwaAEAf
      +9jHOjvE6ECTzZ5Gs251FXQgvZCxFmVVho7wwsd9A6qv6RSrYKNfZeKGM7U+hLvoYCk78CWr
      hCMQRAIUMpE3xbZORcqHIeUfoKo+C84VB78ekQHRLOQedowyhmdsgi/I9DgcQo0NwdkkCtE5
      lWVLc27l/i6DE2FhW7XEKn7/pqYVQsBRPZVvnK3RrRDRQaG7XVGOtBsNHBadcLZ4T3059K9b
      jLkNY+4/6DXqSkzC2FFkl9tFKSxi/hqGGExYD6DU6gr4fbS8/5ULgMNTIrGVU5OAHdd1IsKA
      mf+GPfJdqC62EescKAnjMtCOR+EhCT55dp3dW/oKY16u+jn2lTT0zY6rg4uJyr67o2Mn1vr6
      YN6hOXwrk4gRK1BGBBtrUBRFbLbelCUsUDpgFo6Xa2tgtKl1OFkVY05NpJSCJCVWvUoR5Ild
      ESgygEXxj3EWxmiM8hEqU15r66W+4pkgRORyvWnS9I14HlVGhx02IAiSzDbPEQY88iRmuhwA
      8b9CeMXqfQzPsJcGYYT04VSGgTTD/M41muStmpQ8eMZryBafoHnyFPlIRCEEams+igicmFdh
      NrCT3vwbABjt7cbZbBoejLrRpkwTVbqL8KTbt7TNp6hME+XIGt6EiaqkhCRRY55Lbfe2OZqp
      zPsADrDgkKmFsw45Z/U5ShQCFMaazdp9pMmjTZ9XLAJJYrtsu2lr4qAOIc3diH+YZ0cnITSO
      KnAZ3U0Wbmq4iwwGb8LJyYtQFG/ez6B6CPMMMZxBSulrSsibdbNyjsl8GjmQGM+zyt9kv4DL
      dYssRybrSsxaTzIwr0pUuvL5Hv6wLQu7SjYtPFj3nriN5VUKJ9VkSKwVgc2M7cpm8UpfSZNj
      hxIOQDR3YaaK7Ct5/qOQ8r0oih/d9xBXCgcLqKEQ47hUhiIrVmJ+uiTNHHPWmP0PLh0lLiFN
      D+yDBXEhs7bVoDqWAWf44NxBwoarzLqmyODrMBeqNet7gAHLOKlD+jdsMjDYi6UKTHeCBETP
      8sf5/NsA/DDm828+zGB7ii/8kTvXZjdFkEBZVb5YJig2KYRv/mft6jxAmzDicd1AU4QfEDJy
      XL8ZtkCO25okjb1tx/R9CCsANsmGgyF0qLhaJybG/ynmD/bxIqOtD7+LcoKN+YTSIhG2o9nX
      uelRrKuQrl04AjE3ORlX7viU/+ruJjzRIyAuxQcFVKQgQtXodMJlhFfx8tJrsnOughaS0jcI
      MX1Bd0QQUsEBwbmqV3JtM64aS1+oxPMkXwKZ8gXwzWjdVbQYeizJqvkpnfP1AKvIUxeTflHk
      nZpKvAgizUcjsxuzcmss/HSldtUNrLqhTSXl3Yy4fSyKWSwA1yikuSphhup0TH1k38/opl3T
      549cLcu+iSx2U0YVO0+MlX5BBw4gz6Lmon3OVV9N59cnyEwoQl9Gjy7Mq34Yd15MXYPflzAT
      NZOmpr6Ht+UpMkfsU/oEG5gufVN/aBezazD4WRwffx2U+oONjmuauq2f7+ndUYDluA06a6bj
      KHWFWTkPxGN+d1Vp8ss6D11mDD1rwxQp6bv/UY29y7huJoUY7uzAuTdDlICP4zbNoH3H5FdN
      FGstrDHIizx2Sd/fzhOSPjfIPiciDAbfCSEehnNDXFz8UO9jU8e/TbhfwD58kl19Q67Sk4mf
      KYAUBUmBmWxR0dSaGYZH5akEQ5NGePih5Hke/8YEUm0rlwCMRw0q751udXvh+gBjDWbzue+F
      tfeE2MKUXKfJuC6DQ7KHCK0651CWfwvWPgNV9WUbHdtk21suTEHj/zXy/O0b1QXsQ4gooJTz
      GFolItCDDz7oOBnRtN/54a9rWcTdN/ikxnjKwaOjI1xeXtYIobq26eaD26TP7K4SF2e0DW0N
      Z5KpLLYH2lWLOeeJcFO257TutWtMLGrHdkGrZNeMcJs/ELsxBq7Z4fDHMBx+B6x9euAlOjwS
      dZUoYNl25IkPYG2pHGfg0ptnp5rbeQoiUIBRLI4DFqiOxbmuQ1LCKh5HOhZrrWdtS8zFbcU/
      LwlrmRDXwlifpq+bEi5GgBgusq/Qapfsuru0ZmmBvcf29yn04IMPumZV2K6S4rF3ac9zVaLX
      wB64RgHwbGxW715GyM4ha3ML72s552KfM5ab/vw2ESKNLHsXjHkWjHnKdQ/HLwCl2sOOZVki
      z9vZuFZJqiXTXMBNFZ6MbJI4LLqSsHjYge+jrKRCVZV7LSR3LiENCIjfm1pM81iVNqWiAES4
      aBoGZF55ay0Gg8HG4TgWPvdNXgQ+e5varcsYIG5sxxEtxehD281WvfE4QDFlz6Rbh+xWuS/p
      064o9asOvaibSOR0DDwfWemL9EM+MG2qwN3Hd7EPm82yb7pE9CG4UYisVzE5eDwUCELK8L+7
      288i7DIuOI5LIZQrEiEexnD4ryHlh3p9fx0k5qolBnDChOe5XRmNKuS4tDG+8Kk5eKbTToUX
      waY7QZuk/aGu4+H0FSUkINbZ3w5G2xpd+64OMoHgiKkTr0fG4+9Alv0csuwFOD//f9e+p3XO
      eTNXoNR/hpTvR1m+DKvqkZtRpSbgcJ2kVDtKqVCN5nf3sgrEaOnAfV/gee3GWPa9CIDFbnAT
      zaM+9+gbLoQXHFimOZ/CO8g2z4pIQAlvAnGH86sUa++FcxLWPn3vkSEh5jg6+nII8REI8T2Y
      Tv/eyuO5/3H60yap1ucxcy6K/18bA08ksUAoxA4xWuva5OeTHmoRAIuJn97cutT6VcgiM+47
      tK8r4ibyJMB5lkfEEwd4mZFgE+HIkPSra8u72F4mk+/GfP4KGPOMld9bTnr1gY0LOMes1Edr
      v7/EWdUxjtTU4fkzHA5rDILMvcTHODgPhwaAyWSycuKlF1dK7W0RpOIZKNxWdCT7EM5/sPnh
      Icg8GfuPiSkH8zyH61lP0DYWR5xl3xz4tQ9ZZ9LFqBnDO3qzVd+BlA+gqu5DH+qNdePgYA0r
      UBU4grIsW8syojjcuQ7QlK72KhDI7nsREHmN6cjVkj9XIc75IhO+yyU81IbjiNv1luP3u0rw
      L+z1+EomNExctfi3QYNaewprT9d+zznPNWusRZaptUrAY5oGkQ+0qnxn+VU4JFWWZZzQbQNg
      p8M5F4uUpZR7N4f4ekAwAchr0m0x9ZuKtwtlBP41cwDNMQLL4ePFlxbsBLsIU0ZelzMsSaCy
      Glb7BnttE/AqKuC48Tl3l8kSLA+PIYXzMC2/6QBg1sbP1VhLFw2riGP43EIofeH7CJGmQkSh
      +l+ELe1qt32Z1Km2CcPFGdvEPX3b7p+VxC7CoVGOXmxbo7zT9UPyr9K6luHnz/cBz+iKCDrn
      KeoHeREbsGitMS/nNWdXG+2JcMM89WP2ZmPWkuRNJWKB0m2+qfV5IM3vOuf2ag4tnGATxmGB
      K9oB+ghRnVZFkAisEqbWAYfIt18FfGdNb8qJjYkEAHh2bfgeCVVVAYKuFkqdTHbPnWRjkbmf
      I4j3vo055C+x6CPRtvMSkeeNdRIV6VivEuk14fmeGEKS5zmqme4FwVbphZo3IIRAVVVRKzZN
      Iv4+L4KiKHZOdHHzOgaB3WThHcs6GzuQR+c5aE+tNaTaDcGZ+mfWWcjN2Gx2EikkRESkUmT8
      tnbBuc8wERfe3aYLlBndmvOvOXmJPKRZCM/4bK2NvQE4ajfIB5iV896LcCnAzAeyCZTnviEd
      r9CUvyeFOFRVFYlKeSFssyP4ieJv0JFvaLGtbKuR+gqfV5KnXecJQEANXNcGlegLdmMziDXx
      NrvILsLJudQR8QrQ78zW2sBG4X2oTcYn5cMYjb4RwBjn52/AvHKx9jmN1TfHwzUrlfaZXU+k
      JSNsxAUKRX4Xq0QBiy2oxpkZMP2pH8AhJd4F0mP4hRpjMJlMfPfFoti4O7nHZwhkqj82vStK
      c9WhVD9Z0t/b+4AtOsX7WmuRmEdtY2bqRn88+kQODy6plaCchHGbk94q9RvIsn8PAMiy96HS
      zw22vIBSstbhsw1L5JVlUqcuCGVVhvr0fo8pLoBmMiELTeQWg1XRHOKdIL1ZY0xtsltrMZ1O
      oZRCnuetO8IqEBWffxUDNY/9JgpHsjKVoTI6mA5UMx05ymNc2P6pnWnDmxjtLaSuWzj6Ys3m
      46qql6AsvwLAEeblp8caFGMNVGKcNPMN/DfuAsliE/5Q0ROpG9GgrO3Tyc/bEMdjlVIxspH6
      AYy1aLug1joek2Z7U/NkNBotLQK2o3kzkzdB7W0gfvF6h0xPdSu2h+/R/+4gQK0NygG/rXOj
      kZsmRIRh8RdQ6vdRlp8P50ad5mf6d2tPcXHxL8LfDYhs7PcL1On3W5v4NXwFD0kJFknPolrB
      2wrHThlAlJ6UFwiAWgMLdvJSRl6+wXQ3SW++7W/NUCqRZ2xIm+HZDiaAfYThauPbgnGgSwhY
      bMf8skJhtm9MJ+oTwrlAAd5+rpsaFCDyLZfG41djNPonPjrYUWTU9r6IDDI1h2RiXCHibsDK
      sukTcASIzwmEfhYmoJp7Jg8FmxnpxfilpL5Bqr05xcwLIzWfmoPuM5mMMSjLculBMW2Jhwev
      YxbaTZzzxfA6ZB43PbZNiAgm5E84sZdydwry/JRH46MIue5yItm/uKmLgHE91h5FUttmPXOb
      EBkcHf0tnJ7+VYyGv7ZoMJJM+lY/KvikzjkgzEmOUvm512/UMRHG/blS27u5E6STOjWZ4slE
      3Wlp/q1LrLVLSFT/cFhTSjjrYofJPufbRrij/KaRlpW2ufPj8WzIi161vCtY49t9wrlahVlz
      p7TON5C+aT4A4O///Pz/xtnZr+Ny8q3R+WcK8lVCNIdS7wDROaR8d6TNRIfyZHO8DDAHIQSy
      PA8K2CcLPa+r6nwvhgw+oD4ATRr0J3/yJy7iThqQh9T2Aurp/TQHwPZ/ukDWZQk5ZJpOVg6h
      pnQqLNaFKBTRkqOYRqN4bIeIAHnHy4TuI8vwiK5rGmtgg5binY5ZL/rYyvHagX3jqtgyNpGm
      CcvPylM1MlNzu2Ipil+GlL+N2ewbYe0TACyeGcEnFZ3z4EDuG2BC5VyR51Aqw7ych4KixbNp
      m7cA8O3jb8cb8zfildUrIdiE4QnUjPKkmp9vjn/Y+U3Jbfn3Noc3/Z13ECBppG0MZrNZO4TA
      MYdn++ReFVdPTbtdNKg3kwzMGhaJ5WMsMpV5RzZouDTs2RXCTf/OVWdXnQdYJc1gRjpmTlrl
      KvM724ogxnz+BZhMvitOfgDBJJQxyaitCQ2vdd0UdsC8nAcE6PL43pO/By89eSleN3pdPO4B
      8QAMGXxIfAj0wQ9+0DUnBZHn9jHG1CJCXeYQgIgVai4Wzifw7+niSc/Luw7nDwaDwdLNRE3a
      k2WMJ5/nLVokUbbdHZxzvqE23FK3wS7hRNF4NIbuAB2ukyzLonl43SWlNbMs7N59YdBt5+Jn
      mGW/hyz7DcxmXwtr7659Jw2smGAJEPlGJowY9uaj9wLekb8Dvyd/D39n/nfwuuHr8CPFj2Dk
      RvjAnQ9gYAd4UD6IX8p/CV9YfmE7OzTb+MDCxEknfLpj8Pc5RMoLhjV6iu/g5Fm6u/Dkb2KN
      2oRIINugd5cNfb8c4HvJ7sji4AJhrQ01u4xUTQt70n/5mDzPO3HpzR2tafowAPG6Jz5Lc7y7
      KBPrLMj5iTwefw2E+BiIPozLy39cOz8/cyklJCQQoj82KEXAY6XKssQ8m+GV41fijM4woQle
      NX8V/lD+IV5cvRhFIOG6R9+DV5tXA1jRJTKd5Kzd2+C/6a6QJsuanzUnRxpG5ZecrvSmEHkQ
      2CYmjIfPEsi5WmO/TSTdedKdr0kFCSBmzXkxO+cAIhR5jvlsvnT/xtlEe/qsprU+2lWoPO6a
      SzkSx6x9/rt9O1ryMUTbd5ZshiJXXTfP34I8/3nMZn8XWj+79tmi8MiBLGDM80D0Nhjz6a3n
      alMukghEddhJ7nLcZ+7D78vfx7PNs/Gp1afiTWdvAhB2cOvNawY1LplAbbY02/WszdtuOg2B
      NjV/8/xpco0nAK9wfqjj8XhnR5Ynr3NY1OlueE4fGq37JKrBks2Lgnc3KaUnvZK+JvXy8jI+
      A6Y2jJSBCZTEORejF+n5ORhRhU4nLsAhBNFmrUbtoj3toZuQEBFOTp4PKf8EVfWlOD//1yvH
      JkQFIR6BMU9CHxDDA/IBvHb8WjzTPhM/cPF6KOejmEYbVLLEuTjHbXMbztbNd210zYyOT9kn
      M45iEXHTYWVt1OVIpnY9o/uaTjB/jyc/R49Yy6WTYR91wWzzq2RhbSqppoyOXst1+F++B2P9
      4r64uKgFAbjQ3Trrs7rOZ4hVCN0xNUoq3veoYvMLJRe07n3viWiB2LQd73Cf4qOJL4dzJ6iq
      L1g7NudyGHMPnEN0fL3/5hXFzxU/h58c/CQ0/LP75fyX8Q71Dvx09tN4QH4I5AJ03FkM3ABP
      NE/0SccliyXg3VghAR7LXxQFnHMYjUYYDAaYTCa1aAxHbdLJ2gxF8uTmz7TWS2FRoB46rarK
      23YNR2o2m2E0Gm00admubGrFXXYSIooOrw0TsTIawokl0yONfPH/p+YfP5cuk2XVKLkaahfx
      ZaY2gvEOWW1nrcX5+XdDyu8Jymx1aJo/+/Xi3+LH85/AN82/EX99/jfgHPC+7P14zfg1AIDb
      9jZeOv18fPHsS/AW9RY80z4T987vhbbe/1RZDh3yJa4lYCKI4JL5oQaDQWvYM8/zCIWuQp8s
      rnJiDd2sE0hvvmnrR7vV2ugo8+TvAsOVZYmi6M8ebBs9iFnWxenXSbwX67W2C+PTwBJlSbp7
      ueQ5tJmD1yFSSMD6DvOHlE24n96n3odXj1+N55nn4b3q3Xi/+DOc0zneXL4UIODJ7h48xT4F
      c8zxTPtMKCHxZHsPfuLsJ6JSdvBWBYW8gwlQCGPtUt4kRa1GWpSmJmMHlYgwHA4xm8289koA
      cenWzoso/VtqEgCohVXZ/l8VQtt0sljrIbHGbg7NXSX8IrX1iThq/L15Ha01DHwIti1j3qwg
      u0rxZuHV1Vmn/wIOl+ICAzeEdAvF8Sv5r+CP5R/jAfEAvrF6Bc7V/4Wvrr4yfn7b3MY7zt4B
      A4Nb9lZcu6xcU9OZHCCkiARYxhkIsSiuaj7zzi6R/HK52quqqpqjm3J+pi3uOdyX7gzsH2RZ
      FjEcHPlpEyY06kKYdgmbQM4hdiVpfr7NpOPJ78FtC/+I/Yvmd8uyhLYm7qLz+by+mAnIxM3u
      RL9POZMfw4fEB/FH8g/w3w+/A1+gPxc/dv4mABZZ9l58BGN8d/G/4jnmOXjt7LUQ2I5QgOcl
      EUFmKuZOuOVUm6xtkxq3GOcwn89b4/RthTHpZ83JLzucUillnPjNG2vmHrqE0+9t9h/vUF27
      Tl9TyToH23Dc03PMyxLGaOShMq6WA3CIUIrr2AEOLVOa4s3Fm/Hp5tPx3PK50KLEi06fjz8S
      H8GJy3BGFe52A3zg0Q9jNPynGAy+F8Y8B2dnb93ZPIwKEECe5dDGQ/FXhcB7lWtJKTupU9jM
      aYY606hQU/M3TS6e+M2i6PQafUUKERtGazK1XSB1UleFctdFjAQRaI3pRuEc7D9RCFlK+YlD
      ee5CHiLF+Lxh+AZ83+D78AT7BPye/j0oCFxiCgD4muorMHR34X79uR7bgXMAANFF7bxZ9h4U
      xb/CfP41qKrP6j0ekzQ1LKsSg7wAtcAj/DWDD9DnxEQU+wSUZdk5SVOGaRbOIqeTP/2sq1qs
      K5LSZ6yCRCTXan62SjbhuFkd0ajXrThrIVW2V7/kuoV32v9n9Et4r3wvvnn2zTixJ3iqfSqU
      U3iqeyoyZMhdjp+//Hm8X74fnz//EhSRFhGYTr8NxjwXVfXc2pwZDv8XKPVWSPlenJ39eu+d
      QZKAEJ69gnf6NlxZrb5l3UlZexVFgaIoMJ/PUVVVqznEu0GaOOO6gdTmz7IsTvw2SSMpqZ/R
      V4TwDaVTBoU+5s2+JmdApcfnwbBgIWglKOymSxrJIiI8Ih/Ba0evxYQmGGGEb5l8C75q9lV4
      gX4BbtvbyJ1H9T6r+nQ8q1rO8Do3wmT68tAHwUaFVVVfDCl/B1X1JRuZRXGnRUv1WCK1bPa6
      k7J2LssyUihmWbZkp7PzwSuONT9/nx3b8XiMwWCw0p7nicOTZ2NH2C6aduuQeKpCBrD53UOE
      JVNkLcJL8XQeN7Out4/MaIYvO/4y3Hd6H/4g+wMIIhy7IzzfPB+n7hTP188H4Bf/M/UzcWTX
      E98Ci6x0qhim09dgMvlXMOZTACz8J59I7FcTwhbJUtSnYX5vRNnAuQClFJRSuHPnTm0XaBbN
      c9gzy7Il4qw+GrmZQOs7RsbZa2tCcXraq3jZad23WSJD0ww4hyLPQS6k4K2BUhnKcu6TUjc4
      CvSwfBgjN8LIepPlIfkQ3iXfhYoq/Jb6LdxX3YcBBviZ859BSWX83qZCRJDkIOWDsPZJcE5C
      qT/CaPTfwjsKP435/KUAfFN25xxczw6iHHBZxdC38RtgLT+ZTHBychJ3A9bY6eTP8xzD4XBj
      1jjnXHRkN10A6TilkD6dHsywJgSgmafYh/A588wzllntr80tlozWKIoBbKA7vAnya/mv4ftH
      34+PiY8BAN6evx2fcfIZ+KLjL8KluAQAPF0/Hd8/+3580/yb8JXzRYxeObX15GcZjf4xTk4+
      A6PRdwIAnDuFc7cAjGDt7fg9Lhnt+876mM4bs04554vYq6qKTfS4gsvjP3SEVKxiiuua1Ky5
      fRLDxgm11SJIfl+A1Czg/G6wLV3hRmNo2YKrqoxhuuZ2ftVOciUqfMP4G3CH7qCkEt97+b34
      Q/mHuKRL/LH4Y5zTOcYYg0B4zfQ1BxmDlO8BUQkpfx9EBGPuwfn5OwFUMOaT4vc2hYP0CZ1v
      tAA4MZaGRNk3GI/HsahlPB6HIuW6MH5bdpTHsY0XgXDkOR8V5NbN4jgMaq0NFCsAhTaMV00z
      yELwBE55gEkzZGJTErFN5Z35O/GAeABfMf8KZM6/H+kkPld/Lt6m3oYX6hcCAL529rUwMPgr
      5q/gyebJBx0TAEwmP4Ci+BmU5ZdGhWDMbfh64T+G1s/CFsYKgPVogrWJsFSMMbi8vGy9wPHx
      Mebz+Uqtv9DuCN3RGxACY5ZoSdhG93QZy9vZJjifGl4JLpYoth3LSRXfy3c/vQrYQWeotLMO
      JgkabLvTtYmFxVvzt+LEneAzq8/EQ/IhvODkBbjEJf7Z9J/hlbNXxu8aMpjTfMmU8TQtJpqT
      Vy3Hx6+EUr+C+fwfYDL5B1udg83yrjzWxiqHIzO1kwSneNVC4smnhGwlibJuwSCQAqnYBzB2
      0TW97dwbx+5DEofZm9NSSef832NCDx5QRSA4txs/pzYaIEIuc5SmrGXFt4Vp+JsDJmKCgRtA
      OolfLX4Vrxi9AjlyvOv8Xbhlb+GJ9omoRIVPsp9UO4d0EiPXZsfXm3kfUogmGA5/GNY+FbPZ
      V4NIQIgPgchAiD/f+rw22V3bnOGN3qQQYimEye2S2kyeVNLYflPrcqIsBdI1j/X+xTI//raO
      rAjsCpScPz03E1exVMb3A2iz2/sK33+WZbDG1Ehgd9H81lr81OCn8OzTZ+Pvj/8+AGDsxhAQ
      yJGjcAVO7Al+/fzX8e7zd+Ml5Ut6nZfx9PIKuIiK4ucwGLwOw+G3QKkPwjmHy8sfx3T6g5hO
      v2enczcLtFLZ6M44DMoQ6qIoMBwOIYTAbDar1QO3HQss890ACxhz12Rk2Sc1FhEFihEFEp58
      lmPMvNvYZGdJH922CyDCIYQnk3VBw5rQ/KLm/6yQh+XDeFA+GM8ppcQ71TtxSZd4i3oLjDF4
      /sXz8fY7b8c7z96Je8w9AIBTe4p79b0bjbdvueWuYsxzYO1tWHsfrH0SAEDrZ8GYp2E0+lZk
      2bt2Oj+b503ZyAdgaTI6eM/da+fxeLyEJGXpinhUuopJqlXmDE+gfcN5FyAqFyEMIiwAbyrV
      x9+XEaJNrHMALe4zjVRwiHlVk8APyw/jRccvgiaNX7z4RdxX3QdrLf5c/jneOHojXlK+BJ95
      8XyY0JegyLoz7jdNhJggy34T1t5CVb0ARISTk/sh5X+C1vfj7OzNO55fUs6YSAAAFL1JREFU
      1Bg2gJ4+QBP33qxjBRaTeTqdxm09y7LaIuAXntJp+MnXvmO0mzv710Y+GSOhja7V2Qqe/LxA
      2EfAorhHiGVnfpWI5Bm44Fy+LX8r3qbehm+Y/Xd4WvE0zOdzSCJUVOFfDv4lJCS+bvZ1kE7i
      UfEozugMDg4P08MA/A56T/lk/A/6O/0OBl+3wJ+Ja4h0bSNK/TZGo1cAEDg/fye0fhbK8mtQ
      FB9DVX3JzudP80rRJ+17cDQFEkexSQfCf+d/V+UAKJlMzWPT32uD3XA73iRCBPg4s0P9Xsn/
      AnIER8GOdwvfw5dgyqWdK73/toUcmzmQw9ePvh6P0CO4xCV+oHp9NLd+M/tNfNfwuwAAzzXP
      xQvLF+K+6j78m8m/wRxzfF75ecF/snFRpteLfK0HDuBwP2X/XrfnL/X9gwWADM55XqjZ7DVQ
      6i0YDL4PxjwdZfmyrcfZVoDVa6SpqeMHWp/8bT/8vWY1VNPpa36mlMJoWK8FjhNxjUTNuqWN
      3nR8U/EgK4rYco81cTFClXJgOufwZ+rP8Bmnn4EXn7wYF+Ki9Zy8g96v78eRO8Jnmc+q1VZ8
      ivkU3GvvxTPtM/HJ5pPjcS+bvwwvn788gr44dMw/lks3re2NndlJwunZj9lWquoFuLj499D6
      JRgM/jmIZiCaQal3gugcSv32VuclopibShk6gC3CoEBds6b2a1PTpi+Fv9f0H2qRF/KscJnK
      UFY+wcaTUq5hdOOJoI1Zos0+lCiGfSB0zElChu9R78EHxQcBB/yp/FM8xz6nPlbrqd8tHP53
      +8MoZYlb8pbHU4VzPM08Db9157cAAIXrro1WUkGbBQFBGqpmE/OQjfWEECDnFtTkPcPSbUL0
      UWTZLwAAquoLUVUvxmTyo5E7dFMpigJEhMlk0qoItloAzQKYLqmqCqORjy9Hh7eqYn0xR1pY
      rDWYz+eeAzLUI/ueUX2JnxBi9Ychx01lTnP82ODHMMYYf3vyt2PkCPA+xMvKl+Fb5bfiGMe4
      r7qvMU4X+65BEMgAAzcAZYRKVxgOhjDh/ldNfCD4L0pG7iJWSqk5ZIyGoO0d901llwWn9XOh
      Q0aa6BInJ38DVfVyTCbf1et4Lr4SQmA4HKKqKkyn087vbxUF2kRSjc9ZuclkEj9nukE/GkbS
      L3aUTe1+3oIPjfH5heIX8KrxqwAAbz1/K+4r74tt2QjrUa4pZQzXL+R5DuscirzwSmLF9Znw
      SwoBISXm5XxxrmB6psGGIssPvgA4yceBhG2Fxzke/z3k+f8J547x6KN/1kvpKqVwdHQUd8Gy
      LGvzLZU8z7fbAfpKGiVaYDwMhsNhJM7iF5YW3Q8HA1/Zr3UgO+qv0Xed+H0RqJ9mPg1PsU/B
      yI1wr7k37lYuiRytOgfjflJfaF6WGA2HnkLduRjJaRsjY5skBIzRnn4xUK9zboDFL7BDE6Fg
      a7xWU3iuzOdfDyE+jKr64pW5JedczE9x5aIxBhcXFzWCtlRGoxGyLDvsDpA6pbwtpVSIEecT
      SiW53JJviChEXoy5MizKJpGjmZhBOBErn1gY6rGpxi11hSIv4vW1rgC3zAhtQ9LOGF/vIKXE
      eHyEi8sFC13K0ufcgpb9E0m41gRY2Pos1lqcnZ3FWnPGsBF5BkQAuLy8POwOEO18u2ixyrH/
      9HPesoFF+JBvRpLAUmUzuPcWRc22r+19k/MM7KD175zhlRA17bPOLAJ8UrDIcxhjkWf5IpSZ
      iCABEuT7YBFAoWnEaDhCWZU1Jo+U8OwTQdIqQS606vre8fExJpMJZrMZgIV5NJ/Po19wJSqB
      H37KJMeSJte6+ImkkrCmPgkICcHsAbLDu4iA37maPbJWBXN9bkDWlIV1i95rzWdDRMgD9CQv
      clSVxmAwwHAwhHMOd87u1OqqHQ5T/XbVMhqNYIzpVWSVUtIURYHRaITLy8taP7q9L4CmDc32
      aDrB04G13UQzCaakgtFmKTfgJwwFiPXNYVxgf4DFun51zYKEb/Ppgv9EDir30RuGZDcjGt5U
      8sA6ppJ0zlPVC45KCf/vY0nSAAH7imnxVd9zjMfjSMpwdnZW42hyzu13AbTFgHkBNLfgVX4H
      27iMwaeKIn6+KUIIKAIqo2Ohzb4WwoPyQbx+8Hq80LwQXzn7yq0ZHRhG7XerfrDnOAGS2mEp
      JQbDgS+iScPHxniYBgHz+QxaGwgQpKojdHeN0R9SmESBe0wMBoMYLj8+Pt4az8RwnLOzs/oz
      c744a69OcOrs7vKQuRXOAj4twfHRVQUsJnQN3Fcr0X84+of4wcEPYuzGeN+d9/VmOmgT57hI
      v39xTboTlroCCDg+OgY5RLu27fsOAbJBQJ5lKPIiUtRcTiewxiYBJrpWljpGFQOoNVtMOwbt
      KsaY2gLgd5Fnew6DNsNv24rPLBLKCEv2rXS4eXKbvU/kE2baaEDup5/u/fp+vNG+ES8yL8LQ
      DXc6F8M5tNHIlOq1m/jWqHphUoaJfzQadx5jrAUJwmAwwHg0WlJGg8HAk/daA4B8U8KqggM2
      AvVtKs2dh82ZTUyabYVDpNPp1CtK502i05OTwyfCthGvzS2cs7521y5auK5qkMfH7dMh3mcE
      xTnPBJGHbCWfv0u0MSgrHxrOArMcAGR5BjjUKpyY8388GmM86s/SwDkYzkw3G5bvIryTx3B3
      I6l5enq6F4XZdyxVVeHs/BxCCpwen/hKxl1fbmpX7jMU6V+2iBADouvZqvcZPvQTecGNqo1e
      CfOQQsQMbhoyrqoKpyenmM1mmM3nsM5iUBQYj482TgRyOJE7AxlrI2/Rrs/aYjEvBkWB8WiM
      8/Pz6JwCh41McTj4cjrB6fEJiqLAMYLfGBKRO5tAh3Ks0vCo0QYiNnZYf8xNdfSABUKWsTvc
      2bxtvG0mJS+Cs7Mz30dNEGbzOY7GR2trsptw82YtMieJLi8Js/kMwq1udr5O7jq9BQRlxuPO
      8zxSbH784x/HrVu3cHx8vNX5V4lzDnfu3PEsJkbDWYtbp7cwaFSFqV0nSqqdDiEihhTXa2IX
      0JhV0Kw3qal0KuzkORfqIQT1ub0o/KwvLy+hsgx337pr7fPv+44EEU6OjzEaDnF+cY6yqkKi
      sb/zzsVQTTJkju48+uijODs7AxHh4YcfjqaXMQZPetKT9lLBVukKs3IeE4KT6RR5nuNoXA9k
      7GwCXYWmVVLGBmjk6oU5qVjnoK32jGzXxPmzTtKJGMFzLgEF9nwdjAUaF/t1InlsSincdesu
      GGNQVhWqqkQZqvtUoMdkzA0zf/NPCj1onvuhhx7CbDaLPpC1Fg899BCICLdv3146ZhvhoiVu
      7ctjbWPiO1gmeFczpFlz4ABoYyPuvQ3X4pyL8AB1DTw2m0r6fJx1EEp6x3+NOOd5hU5PT/ea
      92gTKSUGQmA4GCz5Q9Pp1NdvhFg7s4Y75zAc1qNmZVnioYceip83IS9FUeDk5GRn7e+cw/n5
      eew/PQ5NHz0kpyWPxAfxv7vQfuxTll6qc8hVhizPIaVawsc4t+AaGoaul82XcJOFw6R92OGc
      8+QDm7RJ3XVs/G+6g3HkiBnAGfclkx0C8JP/gQceiLkLNpH4XqRSyIoc07AzbNsi1zmHy8tL
      f50wlsFgAClkJ1xGaaMh4Rs/R/Zdo2tEUdvIri+m6VzHcKTHGoNk6MdrFmRaQkoU0uOGGDvE
      CaCbLjx5GDG7aswkCHl2+Pj5KuEMbVmW8T0NBgMMh8Old6+UwsnJSeSUBRYh3BQlMBgUOL+4
      gLUGt05vbTyHmLRZSp8POj46XpsPEsYYVJWP/XIj5UprlFXVuROkMOdDStcDIBCc9eWPRH7i
      G+PzBjcz9tNfuFCmqz2shwssqrvKqtxaY+4qPE7etdh88XPKm0TcV/r27du4dfddcWfgAnXe
      ua210JUOBSxTXE4ucR7w/H2Ew8N5nkMoiSIvMGhApNtEcK2tCRTesaEYLfjYmxfibaptETAk
      YR/O9arBC/KMZQT4FkQNCETqpD3WRGuN+Xzejo5FveprOp3hYrLscF6XpHOC5whXp40GQzzh
      9m3kgwLFYBDRsvyejfVJQhBQaY3BoIAO5bFN4UXGtdV/+Zd/6ecmfO3DSU/8kPL9ahd2Jxei
      6MByoK2JGTye/KylGJvdTLd7oNH+wWlNieZRi94nor1mNa9L+BnzpMryHMYaTKZTaK0xm88W
      mvQG5D6avK5APZlY5DlOjk9wdn6GLM+hSw/DUEphUAxQiQqXoYSx0hpnZ2cAgCfcdTfKskRV
      VciyDMPhMC6wqqoglcTl5NInu476TX5rrc8DNL/MCEsOGzm4OMn45vjizU7vnPIG/OKxzgQn
      5PpfzmNNWLnkeY5KV7H583w+x2w2w3A4xO27n3Ddw6xJLcybFDoBC27U0XCIsioxnU4hle+m
      w8myLMtAwjPkDQdDSCkxm838okgWUhMGMpvNMBgMcXJ80ksRaGNgjIayzrVGy73XHCjLrQOJ
      RVFLn4fAhSraGlhTQdLVluRdl128b7HWYjabwZGPbo1HYzxcfdw7oWuyv9ctbOuntR+sOE9P
      TmGMwTyGuwUuJ5eQUuIJd99dszKElLi4vPDRI6VQGY0TpXA5uUQZzKDxaBQnf58KPJ9bslDO
      2c5iEl4ExlpUgTZQCrl0U01ZgNm8gyOFAmGR9j+0tNUfPJZFCAFtDC4nExhjcDQexy6dN13S
      RRBzOkHp3nV6Cw//5ce9NidgMp2iqircfdddIPKEy6fHJzg9IczLuaeMDAt+Ovc4KOccjo+O
      PEx8QyjMdDaDWjdPuP601BVM+HKKT+nCsLAZlALlmDlsW4jCJgXr3KvssS4caTHWYDafBx9N
      YLwCEn3TpLkIAMQM7V237sLH//LjvtZDSpRliTsBJmGM8TUNKkOR5XDW+ja9ye5wcnS8FHrt
      sytqrXE5ufQ+QOrodt2AEjJ2dyFBsYKHt5zmsWn8Pg4smETkqOYT9F2x0cvHmk7uQqzsDPhY
      Eu615pzDoBjg0bM7kLLCSaLxHgvStggA7xSPhkPMyzLS7qeKaz6fI1MZZvM5LgO7mzEGg2KA
      05OTqIw53LrpM1EycONbZyGp2zyJNCUtaey+F00XEoQAwK1LaS2TmHUeWy7IdwJXK8bal7nu
      pkszH3B2cQ5rLY6Pjg/eT+wQ0vQJ+G9FXuByMkFVVbh16xYIhPl8BqONd3DniwSaCCHOohhE
      S4Ln5CaRsNjul6us+lRQpQ5Gl6wzU3gRGGsiU8G6Ahb2KaQQAejWnaBLC+4f6xKbjYeAAmu5
      fE03npssvAhSYe4eITwhwGBQwFmLmZlBAKjKEiBfS3ESClmasmlhDZtQahMEYnrwLpKC2dgv
      ING+m8RaX1rQ7a3aLRgElW6Nj1XJsgwODo/euRPv564e0OebLs3xCyFwND7CdDZFVZWYzqae
      G8n62uXx+MhnnDvaHG37PJxzUASClP0bD6/L0G46GD+pPcqT48HN5JkDNupTxXDb8Xj8mF0A
      MSYOwmg4xKAY4OzivJMU4LEsvKtdTi4xmU7h4GENQgjcOr0LWaLxm+bOLmHgu05vgT760Y+6
      lLCqFjmhumm0D8aHVcLV+gBimyBmgNv0RvM8P0gm+BAloF1yctK+3X8iSrNiDWiHw7S159pF
      VMo6tsSbEmxOJVWkH2xekFmK91GIzv4B8wLFRMiGN9lszbRP4V7GmcoODrz7RNP0q6TvZN53
      4k91tjHCoji9a/Kzc+p/38/OQOT7dQnaHtvCGqIP88KmIoSIjNU48AT9L2kBXJeIrpXnJ6KI
      lN9dojaoveWCmz4Jql1ePmt/R56HZ5e2PU0RYZc6dL1xURQ3GubwiSK1J9yWzFo1+dlE6VuZ
      ZJ0Ndbu7w6VXCWcRM6liEmlf19vV8eojQojYWedxOawsLYA2qowa1HkHbeppAUOvsB61r7sI
      LwJrPGeOrym+GeWe62Q0Gj1u/lyRLKmyVMOlCwKoM31tM5F8/F8uFa8cWrTWyLMMJMTBF96u
      wiRVj8vViOjS6G2+gQgOMYcqtxXZKLC5Cq3MiwA9stnXKY+bPlcrncRY67bgfXBwpriiqxCj
      je8pYG7WLsDUImkLqcflaqS2APrAjRnPvw9T4iqSSUvXDKRZYgWi9CqTXXmeP27zX6NE1buU
      Be4QnhRSyJ2jK1e9AKy1Ho4dEKWr5KrMpD6tfh6Xw8nKMGgfuelOJYsNVW1VVa1NYDFi8Som
      5uOT/3olAk021cbGGN9ihgSc8z2qrHPX2m2kS5xzqExSRB1oOuwWGKN9yklS0PG4XI/UqBE3
      EWNNIGj1ePXK6Jh1vUlRFk/0VSf5YoK5UlcHHa9vWtF+7hSy/bhcn6htEZ5ZaMDGrUqBkDdo
      Oc8mtbyHENe4tgm9uryZg713UXdh4vN1RGOiSykfd3xviKhtHVE+RkkJbVzojt4OUb0u0qa0
      h7BulOEh4ITIAFKqpUm6jRjmShIimIcEqSTGo3EsBczz/PGJf4Nk6wWQihQSsN1FyddhZ3OD
      uS5SLt6V8ryIEIldGsU556C1d7BFsp9IUe+C+LjcLIk+gAkcjNtgfTgsmppD1ykedRq6ra/I
      WnPBDYCwg+0mJLiIx4XmF/CNrx+XGytRJXErGWC7+LxNKRPJxYqu6xKCt+39z4K+Zel7RBgO
      hr5V6AbOcCzWCT9SSpAQ0EZDVxpZ7ssZzy/OUeQ5iryd7flxuV5RQJ3vc3tzxbM7CBKLgpSw
      s3QVMx9KuOieq7d0g8Wu5pQ7HxbN8txzVa4ICPAiyvPcN6hr+V5mFUpRxglfluXjk/8GS9wB
      0i4x2zitKeUhH6u1D40K2k8D7U2EkaeVtjXSC8YeeToW5XmGjEGlK6hMoaqqSBLG0Rp+Hlxq
      2Wz+hpbzT2czaF2hrMoro4R8XDaXuAA4SrGvmHhtIV2TKcQ7QamrqL35J224HQt0tImTvMgL
      HLdwzGdrOHmY34ZAyLMMR+Ojx6M+N1gUgBi9YS76fQiRnwC+8cZ+J8AmO5Qv6vdsdBymTU2y
      tJmHsQZk/aIZj0Zbm4O8WzwuN19qUAh26PYlPNn2Kc45zKvS1+U2fIuuhcH9zjyvUb0YJ93w
      mEPoaDx+fAL/FyL/P2zMJ2QuQXYtAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
