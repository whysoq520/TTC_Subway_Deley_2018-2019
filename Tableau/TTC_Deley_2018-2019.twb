<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='ttc_subway_delay_2018_2019' inline='true' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ttc_subway_delay_2018_2019' name='textscan.1918ize1rmwgsv107f9u20b96lm3'>
            <connection class='textscan' directory='C:/ut/TTC-Subway-Delay-Dashboard-2018-2019/Data' filename='ttc_subway_delay_2018_2019.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[station_in_line_2018_2019.csv].[station]' />
              <expression op='[ttc_subway_delay_2018_2019.csv].[station]' />
            </expression>
          </clause>
          <relation connection='textscan.1918ize1rmwgsv107f9u20b96lm3' name='station_in_line_2018_2019.csv' table='[station_in_line_2018_2019#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='station' ordinal='1' />
              <column datatype='real' name='latitude' ordinal='2' />
              <column datatype='real' name='longitude' ordinal='3' />
              <column datatype='string' name='line_name' ordinal='4' />
              <column datatype='real' name='avg_delay_time_2019' ordinal='5' />
              <column datatype='integer' name='num_delays_2019' ordinal='6' />
              <column datatype='integer' name='id' ordinal='7' />
              <column datatype='real' name='avg_delay_time_2018' ordinal='8' />
              <column datatype='integer' name='num_delays_2018' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.1918ize1rmwgsv107f9u20b96lm3' name='ttc_subway_delay_2018_2019.csv' table='[ttc_subway_delay_2018_2019#csv]' type='table'>
            <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='datetime' name='time' ordinal='2' />
              <column datatype='string' name='day' ordinal='3' />
              <column datatype='string' name='station' ordinal='4' />
              <column datatype='string' name='code' ordinal='5' />
              <column datatype='integer' name='min_delay' ordinal='6' />
              <column datatype='integer' name='min_gap' ordinal='7' />
              <column datatype='string' name='bound' ordinal='8' />
              <column datatype='string' name='line' ordinal='9' />
              <column datatype='integer' name='vehicle' ordinal='10' />
              <column datatype='string' name='code_info' ordinal='11' />
              <column datatype='string' name='latitude' ordinal='12' />
              <column datatype='real' name='longitude' ordinal='13' />
              <column datatype='string' name='line_name' ordinal='14' />
              <column datatype='string' name='month' ordinal='15' />
              <column datatype='string' name='time_range' ordinal='16' />
              <column datatype='integer' name='month_number' ordinal='17' />
              <column datatype='integer' name='hour' ordinal='18' />
              <column datatype='integer' name='year' ordinal='19' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[F1]' value='[station_in_line_2018_2019.csv].[F1]' />
          <map key='[avg_delay_time_2018]' value='[station_in_line_2018_2019.csv].[avg_delay_time_2018]' />
          <map key='[avg_delay_time_2019]' value='[station_in_line_2018_2019.csv].[avg_delay_time_2019]' />
          <map key='[bound]' value='[ttc_subway_delay_2018_2019.csv].[bound]' />
          <map key='[code]' value='[ttc_subway_delay_2018_2019.csv].[code]' />
          <map key='[code_info]' value='[ttc_subway_delay_2018_2019.csv].[code_info]' />
          <map key='[date]' value='[ttc_subway_delay_2018_2019.csv].[date]' />
          <map key='[day]' value='[ttc_subway_delay_2018_2019.csv].[day]' />
          <map key='[hour]' value='[ttc_subway_delay_2018_2019.csv].[hour]' />
          <map key='[id (ttc_subway_delay_2018_2019.csv)]' value='[ttc_subway_delay_2018_2019.csv].[id]' />
          <map key='[id]' value='[station_in_line_2018_2019.csv].[id]' />
          <map key='[latitude (ttc_subway_delay_2018_2019.csv)]' value='[ttc_subway_delay_2018_2019.csv].[latitude]' />
          <map key='[latitude]' value='[station_in_line_2018_2019.csv].[latitude]' />
          <map key='[line]' value='[ttc_subway_delay_2018_2019.csv].[line]' />
          <map key='[line_name (ttc_subway_delay_2018_2019.csv)]' value='[ttc_subway_delay_2018_2019.csv].[line_name]' />
          <map key='[line_name]' value='[station_in_line_2018_2019.csv].[line_name]' />
          <map key='[longitude (ttc_subway_delay_2018_2019.csv)]' value='[ttc_subway_delay_2018_2019.csv].[longitude]' />
          <map key='[longitude]' value='[station_in_line_2018_2019.csv].[longitude]' />
          <map key='[min_delay]' value='[ttc_subway_delay_2018_2019.csv].[min_delay]' />
          <map key='[min_gap]' value='[ttc_subway_delay_2018_2019.csv].[min_gap]' />
          <map key='[month]' value='[ttc_subway_delay_2018_2019.csv].[month]' />
          <map key='[month_number]' value='[ttc_subway_delay_2018_2019.csv].[month_number]' />
          <map key='[num_delays_2018]' value='[station_in_line_2018_2019.csv].[num_delays_2018]' />
          <map key='[num_delays_2019]' value='[station_in_line_2018_2019.csv].[num_delays_2019]' />
          <map key='[station (ttc_subway_delay_2018_2019.csv)]' value='[ttc_subway_delay_2018_2019.csv].[station]' />
          <map key='[station]' value='[station_in_line_2018_2019.csv].[station]' />
          <map key='[time]' value='[ttc_subway_delay_2018_2019.csv].[time]' />
          <map key='[time_range]' value='[ttc_subway_delay_2018_2019.csv].[time_range]' />
          <map key='[vehicle]' value='[ttc_subway_delay_2018_2019.csv].[vehicle]' />
          <map key='[year]' value='[ttc_subway_delay_2018_2019.csv].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>station</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[line_name]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>line_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_delay_time_2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_delay_time_2019]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>avg_delay_time_2019</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_delays_2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_delays_2019]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>num_delays_2019</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_delay_time_2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_delay_time_2018]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>avg_delay_time_2018</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_delays_2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_delays_2018]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>num_delays_2018</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id (ttc_subway_delay_2018_2019.csv)]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>11</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>12</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>129</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station (ttc_subway_delay_2018_2019.csv)]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>station</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[code]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>code</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[min_delay]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>min_delay</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_gap</remote-name>
            <remote-type>20</remote-type>
            <local-name>[min_gap]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>min_gap</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bound</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bound]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>bound</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line</remote-name>
            <remote-type>129</remote-type>
            <local-name>[line]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>line</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vehicle</remote-name>
            <remote-type>20</remote-type>
            <local-name>[vehicle]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>vehicle</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code_info</remote-name>
            <remote-type>129</remote-type>
            <local-name>[code_info]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>code_info</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[latitude (ttc_subway_delay_2018_2019.csv)]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude (ttc_subway_delay_2018_2019.csv)]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[line_name (ttc_subway_delay_2018_2019.csv)]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>line_name</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_range</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_range]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>time_range</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month_number]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>month_number</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='year' datatype='integer' name='[Calculation_141300469382561793]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Bound' datatype='string' name='[bound]' role='dimension' type='nominal' />
      <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
      <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
      <column caption='Id (Ttc Subway Delay 2018 2019.Csv)' datatype='integer' name='[id (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Latitude (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[latitude (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
      <column caption='Line Name (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[line_name (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
      <column caption='Line Name' datatype='string' name='[line_name]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Longitude (Ttc Subway Delay 2018 2019.Csv)' datatype='real' name='[longitude (ttc_subway_delay_2018_2019.csv)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
      <column caption='Min Gap' datatype='integer' name='[min_gap]' role='measure' type='quantitative' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Month Number' datatype='integer' name='[month_number]' role='dimension' type='quantitative' />
      <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
      <column caption='Station' datatype='string' name='[station]' role='dimension' type='nominal' />
      <column aggregation='Hour' caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
      <column caption='Time Range' datatype='string' name='[time_range]' role='dimension' type='nominal' />
      <column caption='Vehicle' datatype='integer' name='[vehicle]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[min_delay]' derivation='Avg' name='[avg:min_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
      <column-instance column='[line_name]' derivation='None' name='[none:line_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[min_delay]' derivation='Sum' name='[sum:min_delay:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))' hidden='true' name='[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[line]' />
          <groupfilter function='level-members' level='[station (ttc_subway_delay_2018_2019.csv)]' />
        </groupfilter>
      </group>
      <group caption='Action (Line,Station)' hidden='true' name='[Action (Line,Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[line]' />
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <group caption='Action (Month)' hidden='true' name='[Action (Month)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[month]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.535714' measure-ordering='alphabetic' measure-percentage='0.464286' rowDisplayCount='1000' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[sum:min_delay:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:line_name:nk]' type='palette'>
            <map to='#0055ff'>
              <bucket>&quot;Scarborough Rail Transit&quot;</bucket>
            </map>
            <map to='#00ff00'>
              <bucket>&quot;Bloor Danforth&quot;</bucket>
            </map>
            <map to='#aa007f'>
              <bucket>&quot;Sheppard&quot;</bucket>
            </map>
            <map to='#ffff00'>
              <bucket>&quot;Yonge University Spadina&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:month:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;September&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;January&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;May&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;October&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;June&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;February&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;July&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;November&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;August&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;March&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;December&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;April&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:year:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2018</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2019</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:line:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;SRT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SHP&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;YU&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
      <datasources>
        <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
      </datasources>
      <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]'>
        <groupfilter from='&quot;April&quot;' function='range' level='[none:month:nk]' to='&quot;September&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        <target field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]'>
        <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='subway line' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Line Name' />
        <param name='target' value='subway line' />
      </command>
    </action>
    <action caption='Filter1' name='[Action2]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='count by year' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='count by year' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter2' name='[Action3]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='avg by  month' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='avg by  month' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter3' name='[Action4]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='count by month' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='count by month' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter4' name='[Action5]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 2' type='sheet'>
        <exclude-sheet name='count by stations' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='count by stations' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter5' name='[Action6]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Avg by stations' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Avg by stations' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='All lines deley code count'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[code_info]' derivation='Attribute' name='[attr:code_info:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
            <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[code]' derivation='None' name='[none:code:nk]' pivot='key' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([min_delay])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]'>
            <groupfilter function='level-members' level='[none:line:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[attr:code_info:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</cols>
      </table>
      <simple-id uuid='{A2944AB5-8C19-4F18-9011-1ABE1BDE51F8}' />
    </worksheet>
    <worksheet name='Avg by stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[min_delay]' derivation='Avg' name='[avg:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[station (ttc_subway_delay_2018_2019.csv)]' derivation='None' name='[none:station (ttc_subway_delay_2018_2019.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]' filter-group='4'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]' included-values='in-range'>
            <min>9.5</min>
            <max>16.0</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station (ttc_subway_delay_2018_2019.csv):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station (ttc_subway_delay_2018_2019.csv):nk]</cols>
      </table>
      <simple-id uuid='{33675968-4767-403B-B91A-9064D2506B1F}' />
    </worksheet>
    <worksheet name='BD deley code'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[code_info]' derivation='Attribute' name='[attr:code_info:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
            <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[code]' derivation='None' name='[none:code:nk]' pivot='key' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([min_delay])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]'>
            <groupfilter function='member' level='[none:line:nk]' member='&quot;BD&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[attr:code_info:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</cols>
      </table>
      <simple-id uuid='{2D1BE03E-5505-4A68-88C5-A26D6C54FBAD}' />
    </worksheet>
    <worksheet name='SHP delay code count'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[code_info]' derivation='Attribute' name='[attr:code_info:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
            <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[code]' derivation='None' name='[none:code:nk]' pivot='key' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([min_delay])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]'>
            <groupfilter function='member' level='[none:line:nk]' member='&quot;SHP&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[attr:code_info:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</cols>
      </table>
      <simple-id uuid='{4AAFFEAA-7899-448F-8DF1-BB7FCC212043}' />
    </worksheet>
    <worksheet name='SRT delay code'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[code_info]' derivation='Attribute' name='[attr:code_info:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
            <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[code]' derivation='None' name='[none:code:nk]' pivot='key' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' included-values='in-range'>
            <min>5</min>
            <max>138</max>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]'>
            <groupfilter function='member' level='[none:line:nk]' member='&quot;SRT&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[attr:code_info:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</cols>
      </table>
      <simple-id uuid='{8D07B373-9C6B-4AB7-80E7-C87EBB879743}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{399F4EFC-13E2-4E45-B2DC-E6B74A270FCA}' />
    </worksheet>
    <worksheet name='YU delay count'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[code_info]' derivation='Attribute' name='[attr:code_info:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
            <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[code]' derivation='None' name='[none:code:nk]' pivot='key' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([min_delay])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]'>
            <groupfilter function='member' level='[none:line:nk]' member='&quot;YU&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[attr:code_info:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</cols>
      </table>
      <simple-id uuid='{94C41D2D-7B48-4A7B-8C74-2DCA9AC52EEA}' />
    </worksheet>
    <worksheet name='avg by  month'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[min_delay]' derivation='Avg' name='[avg:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[line]' />
              <groupfilter function='level-members' level='[station (ttc_subway_delay_2018_2019.csv)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</cols>
      </table>
      <simple-id uuid='{FC412B78-165F-412F-B42E-B7CBD1077AC1}' />
    </worksheet>
    <worksheet name='count by month'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[line]' />
              <groupfilter function='level-members' level='[station (ttc_subway_delay_2018_2019.csv)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</cols>
      </table>
      <simple-id uuid='{6884D682-DD44-421A-90E4-FBDB5F0B78C4}' />
    </worksheet>
    <worksheet name='count by stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[station (ttc_subway_delay_2018_2019.csv)]' derivation='None' name='[none:station (ttc_subway_delay_2018_2019.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[line]' />
              <groupfilter function='level-members' level='[station (ttc_subway_delay_2018_2019.csv)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]' filter-group='4'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' included-values='in-range'>
            <min>180</min>
            <max>653</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station (ttc_subway_delay_2018_2019.csv):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station (ttc_subway_delay_2018_2019.csv):nk]</cols>
      </table>
      <simple-id uuid='{F2D3D001-5F93-4BFD-A1BE-8F7A3D94A411}' />
    </worksheet>
    <worksheet name='count by year'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column caption='Bound' datatype='string' name='[bound]' role='dimension' type='nominal' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[bound]' derivation='None' name='[none:bound:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[line]' />
              <groupfilter function='level-members' level='[station (ttc_subway_delay_2018_2019.csv)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]' filter-group='4'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</cols>
      </table>
      <simple-id uuid='{AB353FB6-488E-42A9-BFE3-132EDDEEF44D}' />
    </worksheet>
    <worksheet name='deley count by station'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[min_delay]' derivation='Avg' name='[avg:min_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[station]' derivation='None' name='[none:station:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Station' datatype='string' name='[station]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk] + [federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk])</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station:nk]</cols>
      </table>
      <simple-id uuid='{D8953C10-3E22-48FE-B200-79A61E11B9FD}' />
    </worksheet>
    <worksheet name='subway line'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[min_delay]' derivation='Avg' name='[avg:min_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column caption='Line Name' datatype='string' name='[line_name]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[line_name]' derivation='None' name='[none:line_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Weekday' name='[wd:date:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[wd:date:ok]'>
            <groupfilter from='1' function='range' level='[wd:date:ok]' to='7' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[yr:date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:date:ok]' member='2019' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[wd:date:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[yr:date:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:longitude:qk]' field-type='quantitative' max='-8819688.0922813453' min='-8855174.6127209887' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:latitude:qk]' field-type='quantitative' max='5435956.0139341829' min='5401256.6254444038' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='2' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Line Name:&#9;</run>
                <run bold='true'>&lt;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Min Delay:&#9;</run>
                <run bold='true'>&lt;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Min Delay:&#9;</run>
                <run bold='true'>&lt;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff0000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:latitude:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{3117B189-56BC-4B96-ABA9-309C23939905}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='3' name='subway line' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='14250' id='8' name='subway line' pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='34' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='33' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='subway line' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14250' id='8' name='subway line' pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{095BCCA3-FD9D-4BCC-97DC-653A1F25CA4D}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='1500' maxwidth='1200' minheight='1500' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
      </datasources>
      <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
        <column caption='Bound' datatype='string' name='[bound]' role='dimension' type='nominal' />
        <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
        <column-instance column='[bound]' derivation='None' name='[none:bound:nk]' pivot='key' type='nominal' />
        <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98934' id='28' param='horz' type='layout-flow' w='98666' x='667' y='533'>
            <zone h='98934' id='7' param='horz' type='layout-flow' w='85333' x='667' y='533'>
              <zone h='98934' id='5' type='layout-basic' w='85333' x='667' y='533'>
                <zone h='49467' id='13' name='count by year' w='41448' x='667' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24726' id='15' name='count by month' w='43885' x='42115' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='37102' id='17' name='avg by  month' w='43885' x='42115' y='25259'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='37106' id='20' name='count by stations' w='43885' x='42115' y='62361'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45422' id='21' name='Avg by stations' w='41448' x='667' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='4045' id='22' name='Avg by stations' pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' w='41448' x='667' y='95422'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98934' id='27' is-fixed='true' param='vert' type='layout-flow' w='13333' x='86000' y='533'>
              <zone h='7000' id='29' mode='checklist' name='count by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' type='filter' values='database' w='13333' x='86000' y='533'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4066' id='30' mode='checkdropdown' name='Avg by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]' type='filter' values='database' w='13333' x='86000' y='7533'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10066' id='35' name='Avg by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='filter' values='database' w='13333' x='86000' y='11599'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13133' id='38' name='count by year' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:bound:nk]' type='filter' values='database' w='13333' x='86000' y='21665'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='52' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98934' id='51' param='vert' type='layout-flow' w='98666' x='667' y='533'>
                <zone h='13133' id='38' mode='checkdropdown' name='count by year' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:bound:nk]' type='filter' values='database' w='13333' x='86000' y='21665'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49467' id='13' is-fixed='true' name='count by year' w='41448' x='667' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='24726' id='15' is-fixed='true' name='count by month' w='43885' x='42115' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37102' id='17' is-fixed='true' name='avg by  month' w='43885' x='42115' y='25259'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4066' id='30' mode='checkdropdown' name='Avg by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]' type='filter' values='database' w='13333' x='86000' y='7533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10066' id='35' mode='checkdropdown' name='Avg by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='filter' values='database' w='13333' x='86000' y='11599'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45422' id='21' is-fixed='true' name='Avg by stations' w='41448' x='667' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4045' id='22' name='Avg by stations' pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' w='41448' x='667' y='95422'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7000' id='29' mode='checkdropdown' name='count by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' type='filter' values='database' w='13333' x='86000' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37106' id='20' is-fixed='true' name='count by stations' w='43885' x='42115' y='62361'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E3071552-07A4-4836-A978-90FEED1B1078}' />
    </dashboard>
    <dashboard name='Dashboard of Delay code count'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
      </datasources>
      <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='15' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='7' param='horz' type='layout-flow' w='82400' x='800' y='1000'>
              <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
                <zone h='49000' id='3' name='All lines deley code count' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24500' id='10' name='BD deley code' w='41200' x='800' y='74500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24500' id='11' name='YU delay count' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24500' id='12' name='SHP delay code count' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24500' id='13' name='SRT delay code' w='41200' x='42000' y='74500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='14' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='7625' id='16' mode='checkdropdown' name='All lines deley code count' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' type='filter' values='database' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13125' id='17' name='All lines deley code count' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]' type='filter' values='database' w='16000' x='83200' y='8625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='22' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='7625' id='16' mode='checkdropdown' name='All lines deley code count' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' type='filter' values='database' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13125' id='17' mode='checkdropdown' name='All lines deley code count' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]' type='filter' values='database' w='16000' x='83200' y='8625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='All lines deley code count' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24500' id='11' is-fixed='true' name='YU delay count' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24500' id='12' is-fixed='true' name='SHP delay code count' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24500' id='10' is-fixed='true' name='BD deley code' w='41200' x='800' y='74500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24500' id='13' is-fixed='true' name='SRT delay code' w='41200' x='42000' y='74500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8F8436B7-D2F2-46B6-8B16-4DA9D6F237BF}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='subway line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[mn:date:ok]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:latitude:qk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:longitude:qk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[wd:date:ok]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{CEA95483-894C-419C-B8FD-3B1C134D3957}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='subway line'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{392843AA-7BC1-4D3C-91E3-7AB01B7AA3C9}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Avg by stations'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='avg by  month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='count by month'>
          <zoom type='fit-width' />
          <highlight field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='count by stations'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='count by year'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{56C601C3-6FA9-4F37-94CF-ADFF7E0C9743}' />
    </window>
    <window class='worksheet' name='deley count by station'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{707B49C1-664C-4736-9213-AEC1F13FA76C}' />
    </window>
    <window class='dashboard' name='Dashboard of Delay code count'>
      <viewpoints>
        <viewpoint name='All lines deley code count'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</field>
                    <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</field>
                    <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code_info:nk]</field>
                    <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>557</value>
                  <value>&quot;MUATC&quot;</value>
                  <value>&quot;ATC Project&quot;</value>
                  <value>&quot;YU&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='BD deley code'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='SHP delay code count'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='SRT delay code'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='YU delay count'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{E1E85E11-46CA-4397-8369-B346DF9C1100}' />
    </window>
    <window class='worksheet' maximized='true' name='All lines deley code count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code_info:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{C029B729-F508-4DB5-9CA1-0D2532C48CFD}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{746DD407-1300-44E7-B495-A0EF9E249C98}' />
    </window>
    <window class='worksheet' hidden='true' name='Avg by stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{74FF4550-DE69-474E-96A7-A487D55CA5FC}' />
    </window>
    <window class='worksheet' hidden='true' name='BD deley code'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code_info:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{AD2E72B2-CA1D-477A-AB9B-7AA773FF3BD1}' />
    </window>
    <window class='worksheet' hidden='true' name='SHP delay code count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code_info:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{A44F9879-D4B7-4A2F-96DA-E6719776A6C3}' />
    </window>
    <window class='worksheet' hidden='true' name='SRT delay code'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code_info:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:min_delay:qk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{44A32F2D-9611-4CE4-8F78-B5F6F1975815}' />
    </window>
    <window class='worksheet' hidden='true' name='YU delay count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code_info:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{90301F3E-F998-4509-89AA-AEAB16203315}' />
    </window>
    <window class='worksheet' hidden='true' name='avg by  month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0982E10D-6F21-489F-AC79-7C10B7D3EB33}' />
    </window>
    <window class='worksheet' hidden='true' name='count by month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F37934F9-02B1-4B2D-8979-B7E135F23393}' />
    </window>
    <window class='worksheet' hidden='true' name='count by stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station (ttc_subway_delay_2018_2019.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{68A4EFFB-DD88-44D8-82E4-5C44176A7551}' />
    </window>
    <window class='worksheet' hidden='true' name='count by year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:bound:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{557AB465-EB92-4576-A1C1-A4B1434F2C43}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='All lines deley code count' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      GAMIDjX/H8RQzOsx4oRXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard of Delay code count' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='deley count by station' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='subway line' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
