<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='ttc_subway_delay_2018_2019' inline='true' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ttc_subway_delay_2018_2019' name='textscan.1918ize1rmwgsv107f9u20b96lm3'>
            <connection class='textscan' directory='C:/ut/TTC-Subway-Delay-Dashboard-2018-2019/Data' filename='ttc_subway_delay_2018_2019.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[station_in_line_2018_2019.csv].[station]' />
              <expression op='[ttc_subway_delay_2018_2019.csv].[station]' />
            </expression>
          </clause>
          <relation connection='textscan.1918ize1rmwgsv107f9u20b96lm3' name='station_in_line_2018_2019.csv' table='[station_in_line_2018_2019#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='station' ordinal='1' />
              <column datatype='real' name='latitude' ordinal='2' />
              <column datatype='real' name='longitude' ordinal='3' />
              <column datatype='string' name='line_name' ordinal='4' />
              <column datatype='real' name='avg_delay_time_2019' ordinal='5' />
              <column datatype='integer' name='num_delays_2019' ordinal='6' />
              <column datatype='integer' name='id' ordinal='7' />
              <column datatype='real' name='avg_delay_time_2018' ordinal='8' />
              <column datatype='integer' name='num_delays_2018' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.1918ize1rmwgsv107f9u20b96lm3' name='ttc_subway_delay_2018_2019.csv' table='[ttc_subway_delay_2018_2019#csv]' type='table'>
            <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='datetime' name='time' ordinal='2' />
              <column datatype='string' name='day' ordinal='3' />
              <column datatype='string' name='station' ordinal='4' />
              <column datatype='string' name='code' ordinal='5' />
              <column datatype='integer' name='min_delay' ordinal='6' />
              <column datatype='integer' name='min_gap' ordinal='7' />
              <column datatype='string' name='bound' ordinal='8' />
              <column datatype='string' name='line' ordinal='9' />
              <column datatype='integer' name='vehicle' ordinal='10' />
              <column datatype='string' name='code_info' ordinal='11' />
              <column datatype='string' name='latitude' ordinal='12' />
              <column datatype='real' name='longitude' ordinal='13' />
              <column datatype='string' name='line_name' ordinal='14' />
              <column datatype='string' name='month' ordinal='15' />
              <column datatype='string' name='time_range' ordinal='16' />
              <column datatype='integer' name='month_number' ordinal='17' />
              <column datatype='integer' name='hour' ordinal='18' />
              <column datatype='integer' name='year' ordinal='19' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[F1]' value='[station_in_line_2018_2019.csv].[F1]' />
          <map key='[avg_delay_time_2018]' value='[station_in_line_2018_2019.csv].[avg_delay_time_2018]' />
          <map key='[avg_delay_time_2019]' value='[station_in_line_2018_2019.csv].[avg_delay_time_2019]' />
          <map key='[bound]' value='[ttc_subway_delay_2018_2019.csv].[bound]' />
          <map key='[code]' value='[ttc_subway_delay_2018_2019.csv].[code]' />
          <map key='[code_info]' value='[ttc_subway_delay_2018_2019.csv].[code_info]' />
          <map key='[date]' value='[ttc_subway_delay_2018_2019.csv].[date]' />
          <map key='[day]' value='[ttc_subway_delay_2018_2019.csv].[day]' />
          <map key='[hour]' value='[ttc_subway_delay_2018_2019.csv].[hour]' />
          <map key='[id (ttc_subway_delay_2018_2019.csv)]' value='[ttc_subway_delay_2018_2019.csv].[id]' />
          <map key='[id]' value='[station_in_line_2018_2019.csv].[id]' />
          <map key='[latitude (ttc_subway_delay_2018_2019.csv)]' value='[ttc_subway_delay_2018_2019.csv].[latitude]' />
          <map key='[latitude]' value='[station_in_line_2018_2019.csv].[latitude]' />
          <map key='[line]' value='[ttc_subway_delay_2018_2019.csv].[line]' />
          <map key='[line_name (ttc_subway_delay_2018_2019.csv)]' value='[ttc_subway_delay_2018_2019.csv].[line_name]' />
          <map key='[line_name]' value='[station_in_line_2018_2019.csv].[line_name]' />
          <map key='[longitude (ttc_subway_delay_2018_2019.csv)]' value='[ttc_subway_delay_2018_2019.csv].[longitude]' />
          <map key='[longitude]' value='[station_in_line_2018_2019.csv].[longitude]' />
          <map key='[min_delay]' value='[ttc_subway_delay_2018_2019.csv].[min_delay]' />
          <map key='[min_gap]' value='[ttc_subway_delay_2018_2019.csv].[min_gap]' />
          <map key='[month]' value='[ttc_subway_delay_2018_2019.csv].[month]' />
          <map key='[month_number]' value='[ttc_subway_delay_2018_2019.csv].[month_number]' />
          <map key='[num_delays_2018]' value='[station_in_line_2018_2019.csv].[num_delays_2018]' />
          <map key='[num_delays_2019]' value='[station_in_line_2018_2019.csv].[num_delays_2019]' />
          <map key='[station (ttc_subway_delay_2018_2019.csv)]' value='[ttc_subway_delay_2018_2019.csv].[station]' />
          <map key='[station]' value='[station_in_line_2018_2019.csv].[station]' />
          <map key='[time]' value='[ttc_subway_delay_2018_2019.csv].[time]' />
          <map key='[time_range]' value='[ttc_subway_delay_2018_2019.csv].[time_range]' />
          <map key='[vehicle]' value='[ttc_subway_delay_2018_2019.csv].[vehicle]' />
          <map key='[year]' value='[ttc_subway_delay_2018_2019.csv].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>station</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[line_name]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>line_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_delay_time_2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_delay_time_2019]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>avg_delay_time_2019</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_delays_2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_delays_2019]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>num_delays_2019</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_delay_time_2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_delay_time_2018]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>avg_delay_time_2018</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_delays_2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_delays_2018]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>num_delays_2018</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id (ttc_subway_delay_2018_2019.csv)]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>11</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>12</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>129</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station (ttc_subway_delay_2018_2019.csv)]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>station</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[code]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>code</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[min_delay]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>min_delay</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_gap</remote-name>
            <remote-type>20</remote-type>
            <local-name>[min_gap]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>min_gap</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bound</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bound]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>bound</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line</remote-name>
            <remote-type>129</remote-type>
            <local-name>[line]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>line</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vehicle</remote-name>
            <remote-type>20</remote-type>
            <local-name>[vehicle]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>vehicle</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code_info</remote-name>
            <remote-type>129</remote-type>
            <local-name>[code_info]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>code_info</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[latitude (ttc_subway_delay_2018_2019.csv)]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude (ttc_subway_delay_2018_2019.csv)]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[line_name (ttc_subway_delay_2018_2019.csv)]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>line_name</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_range</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_range]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>time_range</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month_number]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>month_number</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='year' datatype='integer' name='[Calculation_141300469382561793]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Bound' datatype='string' name='[bound]' role='dimension' type='nominal' />
      <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
      <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
      <column caption='Id (Ttc Subway Delay 2018 2019.Csv)' datatype='integer' name='[id (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Latitude (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[latitude (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
      <column caption='Line Name (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[line_name (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
      <column caption='Line Name' datatype='string' name='[line_name]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Longitude (Ttc Subway Delay 2018 2019.Csv)' datatype='real' name='[longitude (ttc_subway_delay_2018_2019.csv)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
      <column caption='Min Gap' datatype='integer' name='[min_gap]' role='measure' type='quantitative' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Month Number' datatype='integer' name='[month_number]' role='dimension' type='quantitative' />
      <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
      <column caption='Station' datatype='string' name='[station]' role='dimension' type='nominal' />
      <column aggregation='Hour' caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
      <column caption='Time Range' datatype='string' name='[time_range]' role='dimension' type='nominal' />
      <column caption='Vehicle' datatype='integer' name='[vehicle]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[min_delay]' derivation='Avg' name='[avg:min_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[code]' derivation='None' name='[none:code:nk]' pivot='key' type='nominal' />
      <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
      <column-instance column='[line_name]' derivation='None' name='[none:line_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[min_delay]' derivation='Sum' name='[sum:min_delay:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))' hidden='true' name='[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[line]' />
          <groupfilter function='level-members' level='[station (ttc_subway_delay_2018_2019.csv)]' />
        </groupfilter>
      </group>
      <group caption='Action (Line,Station)' hidden='true' name='[Action (Line,Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[line]' />
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <group caption='Action (Month)' hidden='true' name='[Action (Month)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[month]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.527473' measure-ordering='alphabetic' measure-percentage='0.472527' rowDisplayCount='1000' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[sum:min_delay:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:line_name:nk]' type='palette'>
            <map to='#0055ff'>
              <bucket>&quot;Scarborough Rail Transit&quot;</bucket>
            </map>
            <map to='#00ff00'>
              <bucket>&quot;Bloor Danforth&quot;</bucket>
            </map>
            <map to='#aa007f'>
              <bucket>&quot;Sheppard&quot;</bucket>
            </map>
            <map to='#ffff00'>
              <bucket>&quot;Yonge University Spadina&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:month:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;September&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;January&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;May&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;October&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;June&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;February&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;July&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;November&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;August&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;March&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;December&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;April&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:year:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2018</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2019</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:line:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;SRT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SHP&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;YU&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:code:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ERDO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;EUCD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;EUVE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MUIE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MUWEA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PUSCA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PUTR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SUEAS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TUNOA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ERWA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;EUDO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;EUOPO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MRSAN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MUPLA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PUCSC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PUSWZ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SREAS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TRTC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EUATC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EUTM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MRWEA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MUIR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MUSAN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PUMO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PUTIS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SUAP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TUKEY&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;MUI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ERLV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ERO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;EUHV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MRDD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PRSA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PUSIS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PUTTC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SUROB&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TUS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ERHV&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EUCO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EUYRD&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MUESA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MUWR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PUSCR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PUTS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SUG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ERCD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EUBK&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EUTR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MUFS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MUSC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PUMST&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PUTNT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SUBT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TUML&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;TUNIP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ERTR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;EUO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MRPLA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MUO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PRW&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PUSTP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SRCOL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TRO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ERAC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ERWS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;EUPI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MRTO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MUPLB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PUCSS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PUTD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SRO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TUATC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ERTC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;EUNEA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MRO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MUIS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MUTO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PUSSW&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SRAP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TRNIP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TUSUP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ERCO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EUBO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EUTRD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MUCL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MUTD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PUOPO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PUTO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SUCOL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TUMVS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ERPR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EULT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MRESA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PRSL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PUSNT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PUTTP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SUSA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TUO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TUSC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ERME&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ERRA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EULV&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MRIE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PRSO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PUSO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PUTWZ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SUSP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TUSET&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ERTL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EUNT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MRPAA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MUNOA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PRTST&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PUSTC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SRBT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ERVE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;EUOE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MRPLB&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PRSP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PUATC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PUSTS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SRDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TRSET&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ERNEA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MRCL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MUDD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MUFM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PRO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PUSI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PUTSC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SUO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TUOPO&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;MUPAA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ERDB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EUCA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EUVA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MUD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PRSW&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PUSAC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PUTOE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TRNOA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EUAC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EUSC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MRUI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MUATC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MUPLC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PUDCS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PUTDN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SRUT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TUCC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ERTB&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EUME&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MRNOA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MUIRS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PUSRA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SRAE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SUUT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TUST&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ERLT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ERNT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EUECD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MRD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PRS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PUSIO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PUTSM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SUPOL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TUOS&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;SUDP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ERBO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;EUAL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;EUTL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MRUIR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MUPR1&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PUMEL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PUTIJ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SUAE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TUDOE&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
      <datasources>
        <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
      </datasources>
      <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]'>
        <groupfilter from='&quot;April&quot;' function='range' level='[none:month:nk]' to='&quot;September&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        <target field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]'>
        <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='subway line' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Line Name' />
        <param name='target' value='subway line' />
      </command>
    </action>
    <action caption='Filter1' name='[Action2]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='count by year' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='count by year' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter2' name='[Action3]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='avg by  month' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='avg by  month' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter3' name='[Action4]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='count by month' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='count by month' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter4' name='[Action5]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 2' type='sheet'>
        <exclude-sheet name='count by stations' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='count by stations' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter5' name='[Action6]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Avg by stations' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Avg by stations' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='All lines delay code count'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 25 Delay factor Over all</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[code_info]' derivation='Attribute' name='[attr:code_info:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
            <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[code]' derivation='None' name='[none:code:nk]' pivot='key' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]'>
            <groupfilter count='25' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([min_delay])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]'>
            <groupfilter from='&quot;BD&quot;' function='range' level='[none:line:nk]' to='&quot;YU&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[attr:code_info:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</cols>
      </table>
      <simple-id uuid='{A2944AB5-8C19-4F18-9011-1ABE1BDE51F8}' />
    </worksheet>
    <worksheet name='All lines delay code count (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 25 Delay factor Over all</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[code_info]' derivation='Attribute' name='[attr:code_info:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_delay]' derivation='Avg' name='[avg:min_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
            <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[code]' derivation='None' name='[none:code:nk]' pivot='key' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([min_delay])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;ERAC&quot;' function='range' level='[none:code:nk]' to='&quot;TUSUP&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]'>
            <groupfilter from='&quot;BD&quot;' function='range' level='[none:line:nk]' to='&quot;YU&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' />
              <text column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]' />
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
              <lod column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[attr:code_info:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0886ECF6-2B85-4F5E-AC57-608FFC8E014C}' />
    </worksheet>
    <worksheet name='Avg by stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[min_delay]' derivation='Avg' name='[avg:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[station (ttc_subway_delay_2018_2019.csv)]' derivation='None' name='[none:station (ttc_subway_delay_2018_2019.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]' filter-group='4'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]' included-values='in-range'>
            <min>9.5</min>
            <max>16.0</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station (ttc_subway_delay_2018_2019.csv):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station (ttc_subway_delay_2018_2019.csv):nk]</cols>
      </table>
      <simple-id uuid='{33675968-4767-403B-B91A-9064D2506B1F}' />
    </worksheet>
    <worksheet name='BD deley code'>
      <layout-options>
        <title>
          <formatted-text>
            <run>BD Line Delay Top 10 Factors</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[code_info]' derivation='Attribute' name='[attr:code_info:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
            <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[code]' derivation='None' name='[none:code:nk]' pivot='key' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([min_delay])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]'>
            <groupfilter function='member' level='[none:line:nk]' member='&quot;BD&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[attr:code_info:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</cols>
      </table>
      <simple-id uuid='{2D1BE03E-5505-4A68-88C5-A26D6C54FBAD}' />
    </worksheet>
    <worksheet name='SHP delay code count'>
      <layout-options>
        <title>
          <formatted-text>
            <run>SHP Line Delay Top 10 Factors</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[code_info]' derivation='Attribute' name='[attr:code_info:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
            <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[code]' derivation='None' name='[none:code:nk]' pivot='key' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([min_delay])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]'>
            <groupfilter function='member' level='[none:line:nk]' member='&quot;SHP&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' num-steps='7' palette='purple_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[attr:code_info:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</cols>
      </table>
      <simple-id uuid='{4AAFFEAA-7899-448F-8DF1-BB7FCC212043}' />
    </worksheet>
    <worksheet name='SRT delay court'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#4e79a7'>SRT Line Top 10 Delay factors</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[code_info]' derivation='Attribute' name='[attr:code_info:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
            <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[code]' derivation='None' name='[none:code:nk]' pivot='key' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([min_delay])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERAC&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERBO&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERCD&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERCO&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERDB&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERDO&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERHV&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERLT&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERLV&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERME&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERNEA&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERNT&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERO&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERPR&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERRA&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERTB&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERTC&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERTL&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERTR&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERVE&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERWA&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERWS&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRCL&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRD&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRDD&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRESA&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRIE&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRNOA&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRO&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRPAA&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRPLA&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRPLB&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRSAN&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRTO&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRUI&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRUIR&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRWEA&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;PRO&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;PRS&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;PRSA&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;PRSL&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;PRSO&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;PRSP&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;PRSW&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;PRTST&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;PRW&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;SRAE&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;SRAP&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;SRBT&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;SRCOL&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;SRDP&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;SREAS&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;SRO&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;SRUT&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;TRNIP&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;TRNOA&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;TRO&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;TRSET&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;TRTC&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]'>
            <groupfilter function='member' level='[none:line:nk]' member='&quot;SRT&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' num-steps='10' palette='blue_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[attr:code_info:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</cols>
      </table>
      <simple-id uuid='{632A1486-F1DF-457F-8ACB-C06CCE1B8090}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{399F4EFC-13E2-4E45-B2DC-E6B74A270FCA}' />
    </worksheet>
    <worksheet name='Sheet 15'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[code_info]' derivation='Attribute' name='[attr:code_info:nk]' pivot='key' type='nominal' />
            <column-instance column='[code]' derivation='Count' name='[cnt:code:qk]' pivot='key' type='quantitative' />
            <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
            <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[code]' derivation='None' name='[none:code:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([code])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#ff0000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]' />
              <size column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:code:qk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[attr:code_info:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0A16741B-E17F-482F-A91F-D17978081D4D}' />
    </worksheet>
    <worksheet name='YU delay count'>
      <layout-options>
        <title>
          <formatted-text>
            <run>YU Line Delay Top 10 Factors</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[code_info]' derivation='Attribute' name='[attr:code_info:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
            <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[code]' derivation='None' name='[none:code:nk]' pivot='key' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([min_delay])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]'>
            <groupfilter function='member' level='[none:line:nk]' member='&quot;YU&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' max='693' min='55' num-steps='48' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2f2da</color>
                <color>#f3f3c3</color>
                <color>#f5f5ab</color>
                <color>#f6f693</color>
                <color>#f8f87c</color>
                <color>#f9f963</color>
                <color>#fafa4b</color>
                <color>#fcfc32</color>
                <color>#fdfd19</color>
                <color>#ffff00</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[attr:code_info:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</cols>
      </table>
      <simple-id uuid='{94C41D2D-7B48-4A7B-8C74-2DCA9AC52EEA}' />
    </worksheet>
    <worksheet name='avg by  month'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[min_delay]' derivation='Avg' name='[avg:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[line]' />
              <groupfilter function='level-members' level='[station (ttc_subway_delay_2018_2019.csv)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</cols>
      </table>
      <simple-id uuid='{FC412B78-165F-412F-B42E-B7CBD1077AC1}' />
    </worksheet>
    <worksheet name='count by month'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[line]' />
              <groupfilter function='level-members' level='[station (ttc_subway_delay_2018_2019.csv)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</cols>
      </table>
      <simple-id uuid='{6884D682-DD44-421A-90E4-FBDB5F0B78C4}' />
    </worksheet>
    <worksheet name='count by stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[station (ttc_subway_delay_2018_2019.csv)]' derivation='None' name='[none:station (ttc_subway_delay_2018_2019.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[line]' />
              <groupfilter function='level-members' level='[station (ttc_subway_delay_2018_2019.csv)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]' filter-group='4'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' included-values='in-range'>
            <min>180</min>
            <max>653</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station (ttc_subway_delay_2018_2019.csv):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station (ttc_subway_delay_2018_2019.csv):nk]</cols>
      </table>
      <simple-id uuid='{F2D3D001-5F93-4BFD-A1BE-8F7A3D94A411}' />
    </worksheet>
    <worksheet name='count by year'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column caption='Bound' datatype='string' name='[bound]' role='dimension' type='nominal' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[bound]' derivation='None' name='[none:bound:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[line]' />
              <groupfilter function='level-members' level='[station (ttc_subway_delay_2018_2019.csv)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]' filter-group='4'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</cols>
      </table>
      <simple-id uuid='{AB353FB6-488E-42A9-BFE3-132EDDEEF44D}' />
    </worksheet>
    <worksheet name='deley count by station'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[min_delay]' derivation='Avg' name='[avg:min_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[station]' derivation='None' name='[none:station:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Station' datatype='string' name='[station]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk] + [federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk])</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station:nk]</cols>
      </table>
      <simple-id uuid='{D8953C10-3E22-48FE-B200-79A61E11B9FD}' />
    </worksheet>
    <worksheet name='subway line'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[min_delay]' derivation='Avg' name='[avg:min_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column caption='Line Name' datatype='string' name='[line_name]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[line_name]' derivation='None' name='[none:line_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Weekday' name='[wd:date:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[wd:date:ok]'>
            <groupfilter from='1' function='range' level='[wd:date:ok]' to='7' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[yr:date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:date:ok]' member='2019' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[wd:date:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[yr:date:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:longitude:qk]' field-type='quantitative' max='-8819688.0922813453' min='-8855174.6127209887' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:latitude:qk]' field-type='quantitative' max='5435956.0139341829' min='5401256.6254444038' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='2' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Line Name:&#9;</run>
                <run bold='true'>&lt;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Min Delay:&#9;</run>
                <run bold='true'>&lt;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Min Delay:&#9;</run>
                <run bold='true'>&lt;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff0000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:latitude:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{3117B189-56BC-4B96-ABA9-309C23939905}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='3' name='subway line' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='14250' id='8' name='subway line' pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='38' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='37' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='subway line' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14250' id='8' name='subway line' pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{095BCCA3-FD9D-4BCC-97DC-653A1F25CA4D}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='1500' maxwidth='1200' minheight='1500' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
      </datasources>
      <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
        <column caption='Bound' datatype='string' name='[bound]' role='dimension' type='nominal' />
        <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
        <column-instance column='[bound]' derivation='None' name='[none:bound:nk]' pivot='key' type='nominal' />
        <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98934' id='28' param='horz' type='layout-flow' w='98666' x='667' y='533'>
            <zone h='98934' id='7' param='horz' type='layout-flow' w='85333' x='667' y='533'>
              <zone h='98934' id='5' type='layout-basic' w='85333' x='667' y='533'>
                <zone h='49467' id='13' name='count by year' w='41448' x='667' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24726' id='15' name='count by month' w='43885' x='42115' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='37102' id='17' name='avg by  month' w='43885' x='42115' y='25259'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='37106' id='20' name='count by stations' w='43885' x='42115' y='62361'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45422' id='21' name='Avg by stations' w='41448' x='667' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='4045' id='22' name='Avg by stations' pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' w='41448' x='667' y='95422'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98934' id='27' is-fixed='true' param='vert' type='layout-flow' w='13333' x='86000' y='533'>
              <zone h='7000' id='29' mode='checklist' name='count by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' type='filter' values='database' w='13333' x='86000' y='533'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4066' id='30' mode='checkdropdown' name='Avg by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]' type='filter' values='database' w='13333' x='86000' y='7533'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10066' id='35' name='Avg by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='filter' values='database' w='13333' x='86000' y='11599'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13133' id='38' name='count by year' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:bound:nk]' type='filter' values='database' w='13333' x='86000' y='21665'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='56' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='55' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='13133' id='38' mode='checkdropdown' name='count by year' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:bound:nk]' type='filter' values='database' w='13333' x='86000' y='21665'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49467' id='13' is-fixed='true' name='count by year' w='41448' x='667' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='24726' id='15' is-fixed='true' name='count by month' w='43885' x='42115' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37102' id='17' is-fixed='true' name='avg by  month' w='43885' x='42115' y='25259'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4066' id='30' mode='checkdropdown' name='Avg by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]' type='filter' values='database' w='13333' x='86000' y='7533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10066' id='35' mode='checkdropdown' name='Avg by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='filter' values='database' w='13333' x='86000' y='11599'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45422' id='21' is-fixed='true' name='Avg by stations' w='41448' x='667' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4045' id='22' name='Avg by stations' pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' w='41448' x='667' y='95422'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7000' id='29' mode='checkdropdown' name='count by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' type='filter' values='database' w='13333' x='86000' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37106' id='20' is-fixed='true' name='count by stations' w='43885' x='42115' y='62361'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E3071552-07A4-4836-A978-90FEED1B1078}' />
    </dashboard>
    <dashboard name='Dashboard of Delay code count'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
      </datasources>
      <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
        <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='15' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='7' param='horz' type='layout-flow' w='82400' x='800' y='1000'>
              <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
                <zone h='49000' id='3' name='All lines delay code count' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24500' id='10' name='BD deley code' w='41200' x='800' y='74500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24500' id='11' name='YU delay count' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24500' id='12' name='SHP delay code count' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24500' id='24' name='SRT delay court' w='41200' x='42000' y='74500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='14' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='7625' id='16' mode='checkdropdown' name='All lines delay code count' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' type='filter' values='database' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13125' id='17' name='All lines delay code count' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]' type='filter' values='database' w='16000' x='83200' y='8625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='18875' id='25' name='SRT delay court' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='filter' w='16000' x='83200' y='21750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9125' id='26' name='SRT delay court' pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' type='color' w='16000' x='83200' y='40625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='29' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='7625' id='16' mode='checkdropdown' name='All lines delay code count' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' type='filter' values='database' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13125' id='17' mode='checkdropdown' name='All lines delay code count' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]' type='filter' values='database' w='16000' x='83200' y='8625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='All lines delay code count' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24500' id='11' is-fixed='true' name='YU delay count' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24500' id='12' is-fixed='true' name='SHP delay code count' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24500' id='10' is-fixed='true' name='BD deley code' w='41200' x='800' y='74500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18875' id='25' mode='checkdropdown' name='SRT delay court' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='filter' w='16000' x='83200' y='21750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24500' id='24' is-fixed='true' name='SRT delay court' w='41200' x='42000' y='74500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='26' name='SRT delay court' pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' type='color' w='16000' x='83200' y='40625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8F8436B7-D2F2-46B6-8B16-4DA9D6F237BF}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='subway line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[mn:date:ok]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:latitude:qk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:longitude:qk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[wd:date:ok]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{CEA95483-894C-419C-B8FD-3B1C134D3957}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='subway line'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{392843AA-7BC1-4D3C-91E3-7AB01B7AA3C9}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Avg by stations'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='avg by  month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='count by month'>
          <zoom type='fit-width' />
          <highlight field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='count by stations'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='count by year'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{56C601C3-6FA9-4F37-94CF-ADFF7E0C9743}' />
    </window>
    <window class='worksheet' name='deley count by station'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{707B49C1-664C-4736-9213-AEC1F13FA76C}' />
    </window>
    <window class='dashboard' name='Dashboard of Delay code count'>
      <viewpoints>
        <viewpoint name='All lines delay code count'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</field>
                    <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</field>
                    <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
                    <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[attr:code_info:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>693</value>
                  <value>&quot;SUDP&quot;</value>
                  <value>&quot;YU&quot;</value>
                  <value>&quot;Disorderly Patron&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='BD deley code'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='SHP delay code count'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='SRT delay court'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='YU delay count'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{E1E85E11-46CA-4397-8369-B346DF9C1100}' />
    </window>
    <window class='worksheet' name='All lines delay code count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code_info:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{C029B729-F508-4DB5-9CA1-0D2532C48CFD}' />
    </window>
    <window class='worksheet' maximized='true' name='All lines delay code count (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code_info:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{2E830911-FDA0-4713-8C85-8158FA8CEEFC}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{746DD407-1300-44E7-B495-A0EF9E249C98}' />
    </window>
    <window class='worksheet' name='Sheet 15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:code:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code_info:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D12474BF-9947-410C-967F-F875BABFB017}' />
    </window>
    <window class='worksheet' hidden='true' name='Avg by stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{74FF4550-DE69-474E-96A7-A487D55CA5FC}' />
    </window>
    <window class='worksheet' hidden='true' name='BD deley code'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code_info:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{AD2E72B2-CA1D-477A-AB9B-7AA773FF3BD1}' />
    </window>
    <window class='worksheet' hidden='true' name='SHP delay code count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code_info:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{A44F9879-D4B7-4A2F-96DA-E6719776A6C3}' />
    </window>
    <window class='worksheet' hidden='true' name='SRT delay court'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code_info:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{CEE44D43-6EC4-4300-B180-595F6470CEAD}' />
    </window>
    <window class='worksheet' hidden='true' name='YU delay count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code_info:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{90301F3E-F998-4509-89AA-AEAB16203315}' />
    </window>
    <window class='worksheet' hidden='true' name='avg by  month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0982E10D-6F21-489F-AC79-7C10B7D3EB33}' />
    </window>
    <window class='worksheet' hidden='true' name='count by month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F37934F9-02B1-4B2D-8979-B7E135F23393}' />
    </window>
    <window class='worksheet' hidden='true' name='count by stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station (ttc_subway_delay_2018_2019.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{68A4EFFB-DD88-44D8-82E4-5C44176A7551}' />
    </window>
    <window class='worksheet' hidden='true' name='count by year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:bound:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{557AB465-EB92-4576-A1C1-A4B1434F2C43}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='All lines delay code count' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='All lines delay code count (2)' width='192'>
      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
      WZ74Ocb/AyxwrVMkJq+1AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      GAMIDjX/H8RQzOsx4oRXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard of Delay code count' width='192'>
      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
      9eLr/w8iIkNpYFBE4wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 15' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAVnElEQVR4nO3dSXMc533H8W93z/TsM8BgQOwESXAVRYIUSYkUZUmkJDtybMmpJJVKKqek
      UnHKryCpXFO55paqHJNKygdXbJcrcWwnkiVZpkhJhLlvAAmAJPZt9q27nxxGFEVhmxnMgBL6
      /zmJnO5+WsX+dT/99LNoSimFEC6lP+0TEOJpkgAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAI
      V5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeT
      AAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAI
      V5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MAiIZTjs3Na5eYXkhx5/pl
      Llz4lEy+wLUrl8iV7Kd9ek/QlFLqaZ+E2FqsUp7Z+UU+uXiNs6+cZOjjjwiaXvSOHcyMPeCb
      r73U0PIm715meMEkbM0xPPqQY6eOcXnoNodOHGegZ9ua+8oTQDScxwww82AEjy9A0O9B+Vpo
      T8QZv32DUCTS0LLsYoaRiUWcYoGjJ0/T3dtNwM6hPDp2ef2njQRANFwxs8h8soDp8zIxNsqB
      w4N4TBOf14vP72toWYsz0ySTiwxdv0lq4i6hjl0EIp188+yL3Lt5Z939pQoknjrHcbAtC9u2
      UcqhWFYUHfAaBqbXIOjzouvaGgewWEjl0SkTjbXilPJc+HiIwRMnCfmMNcuWAIhNoZSiXCqR
      SafIpJJk0yly2SyFfI5SsYRyHJRyUMD1GZv3Rh10TUPXNUyvQSzkIxEL0pOI0tMeYWdXCz3t
      USIBE01bIxzrkACIplBKYdsWS/NzzM/MsDg/Sy6TwbbXr5dfm3F499762wV9XroTEQ4PdHBk
      Tyf7+trweY2aAiEBEMvMT45x8ep1tnXvZfzWEIkd+/GXl5hNF3n+xZdpCXpX3de2beanp5h6
      eJ/52Rmscrnm8qsNwJdFgibH93Vz+lAfR3Z34vWsXf0B8NRcitjyWtvasQt5bA08pk4unSEQ
      AqdUoFC04EsBUEqRnJ3i9sfvkyzY4Gnsi2610rkS7w6N8u7QKPFogNeP7eS1Y7voaA2t+lSQ
      J4BYZmFmimR6keHRGfq7uxm+PcyBw3spJCcomns48kwnULnw5x6McuXX/834jd9hW2WifXtp
      2b5vQ+XX+wRYic9rcPpQH997aR/bO1qWBUECIJYp5tKMPpikf+cAi1P3MaMJgobFxFyGXTt6
      QSmWZiYY+tVPGL36KcpxPt/X8AXpfu4Mml5/C3sjA/DIK7F7/M2RDL5TP0CLdH0eBAmAqEkx
      l2Xo/37KjXPv4FjWitu0P/MCgda1v8CupdEB8Go2/9D+r3Srh+ANYh79c8wTf4lmhuQdQFRH
      KYexa0N89NN/J5tcWHPbzPQYgZZ22EDzZCO9GB6hSz2s/KGco3ThXyjf/gX+1/5eAiDWV8xl
      OP+zHzJ88UOqqTAUFmexSgU8vsAmnN3aTN3mu4HfoH3ptNXSGPkff18CIFanlGL+4Rjv/sc/
      k5qbrn4/xyY395Boz+4mnl11ToeG6VATK//o2BIAsTKlFHc++Q2//cm/YZdLNe+fmb5PpHsX
      mvb0upt5dYe3Au8vu/t/kQRALKMch6Ff/YTfvfOzqqo8K7HyGYqpBfyxRIPPrnovh26SUGs/
      uaQ3qHiS7cCHHxO8Pb7hQ2Wm7zfghOpjap/V/dfZTgIgHrNteO8c2p177At1cqRz/4YOl5+f
      xKmj+tQIr0RuklAz624nARAVtg3vn4fRyl1bA45Gt7OvfWfdh1SOTXbuYYNOsHp+3eI7/g+r
      2lYCIMBx4NyncO/Jao+maZxq20tfS2fdh85O36/7PaJer4Zv0FbF3R8kAEIpuHQdbt9d8WcD
      jVc6DtEejtd1+FI2STmb3MgZ1iRgWLxZ5d0fJADi3n0YurrmJj7N4LWuI0T84bqKyExv/IW6
      WmdC12lTc1VvLwFws4Ul+PBCVZuGDJM3+o7h9/prLiY3N4ljNf9l2G/Y/L7/g5r2kQC4VakM
      752D8sod2lbSYgQ423cUj1Hb5yPHKpGbn6r1DGv2evgKUbVY0z4SADdSCi5ehsXa6uYa0GXG
      eKl3EL3GL7zZ6fuVcpskYFi86ftw3Xb/L5MAuNHENNwYrnv3AX+CE93P1LRPMbNIKZeuu8z1
      fDN8mViNd3+QALiPZVWaPDdyN9Y0DkZ6ONSxp/p9lCI705wvw2GjxLd85+raVwLgJkrB1VuQ
      2vidWEPjeOsudsX7qt4nO/sA5TR+btA3IrXX/R+RALhJLg9XbzbscDoaL7UfoDPSXtX2TrlE
      fqH6btXVCBslvmnWd/cHCYC7/O5apfWngbyaztnuQVqDLVVtn5keb+iX4W9FLhFRS3XvLwFw
      i1QaRkabcuiA5uH1niOEfMF1ty0k57AKuYaUGzZKfMv87YaOIQFwi6u3wGre3PxRw89rvc/h
      9Zhrb6gU2dkHDShR8e3IEAG1sfcZCYAb5AswMtb0Yto9Ic70HkFfZ0qUXANehqOeMq+bH9Xc
      7v9lEgA3GB6FOqYorJmm0eeP82LP4TXn57QKOQpL1ffXWcm3w58S3ODdHyQAW59ScHtkU4vc
      G+rg6DqDaTbSQa7Vk+eMeb7u/b9IArDVzS1AsnlfYFeioTEY3c6+xI5VtykszWIV83Ud/83w
      ECGVqfPsKpTykp/eJQHY8jah7r8SXdM4ldhHb0vXir8rxyZXx8vwRu/+CihnO0hfP0BhNCyz
      QnydKMfi3P/+hI7nvstAwsfsg3tcunGbnv4djN4ewdeSoCPkcOvWMEdf+x474wG4v8qcOJvA
      QONMx7P83Coyl1k+m1xm+j6Rnt01zef/ncinBFS2rvNxrBD5B32Uph+3VMkT4OtE09m3q4dU
      oTIZbaK7n+1dCZRdJpnLk8mkOXjkBbr6+ultC8FSCtIbqypslKkZvN59hKh/+eJ4ViFLMTVf
      9bHi3gJnvLXf/ZUyKM73kbqy+4mLHyQAXzvlUolCoYBlWQxfu0jeE6evxaCtbz84JYrpSbRQ
      J15dq/T6/AoI6Sav9x5dcTBN9V+GFd8Jf4ypqn9vUIBViJO5fYDccCuqtLwcCcDXiGOVeJDy
      4kk/4NrVa0TiCbILk6SMTgbiimPHX8BSYY4PftZLc6q6geGbodUT5LW+5zD0J2vd+fmpqkaL
      Jbx5XvFWN3oNQDk+8g/3kL7Sh7W0+mUu7wBfI4bXz/GTLz7xd509Oyr/sa31yY0tq9IC9BXS
      YUZ4ue8I741fxFGValzlZXiCSPfa0698N3wBXxV3f4VOOdlJfrQdp6CoPAdWJ0+ArSqXh0Lx
      aZ/FEzQ0dgYSnOh6cjBNZuY+Sjmr7AUdZoaXvJ+ueWwF2KUo2ZH9ZG8mPrv41ydPgK1qMdnU
      IYj10oCD0R6ydpGr05WFrMvZJKVMEl+kdYU9KnX/te7+SnkpzvaRvx8Bq7b/ZwnAVrWUetpn
      sCoNjRMtu8iVC9xdqIwSy06PrxiATjPLac8nq9ZkytkOcqMdOBlYr7qzEqkCbVVPuflzPbqm
      8Y1tB+iMVgbT5OYncazl/ZXeCp/HVMurco4VIju2n8y1Rxd/nedR/67iKy1T38eizeRB52zn
      YVqDMRyrTG5+8onfO8wMpz1P1v2VMigubK+06U+Z9dz0UYDj8ZAPBaUKtGV9xV6AVxPQvbze
      c5T/Gr9AZnqccMf2z397O/wRhqo0kSoFTilObrT7s2bN6q78Rxd7qr2N+ViMuZYoC4k2FsJB
      0n6/BGDLyhee9hlULWr4eaP3OX4+doFSNgWE8WgOB/TKS7Jy/OQneylOhMBZ/cJ3dJ1sS4yl
      lhjzsSjziTbmW6IshIKsNvpAArAVKVX5DvA10uYN82rvUc7PPoTgPk6Hh0loi5SSXeTH2nHy
      8OiurzSNYihIKhZlviXGQiLOXCzGQiRMwWPg1NC3SAKwFTlOXXXjp0kD+vytFA2Yocxrvk/I
      ju4lvxgiF40y3/Pojh5jPhImGwxQasAyrBKArchx+Nol4DMDZpxDgRSX9bNMnGxjsSVGvonr
      DUsAtiJNhw2Plt08Cli0dOayNoueNNr2D/kfdKLBI5harKllSwC2IkP/yqzSvhYHmCnpDC/a
      LGQLaLri6KsfkPFnyZds8qV3CPu7iYWeRzfiNCPUEoCtSNPA69mcgfB1sNB4mIO7SZtU7nFP
      0B3P3CIQmqVoG+iaF0cpMoUJcsWf0RLaTyhwBDQfjQyCBGCr8vsqHeK+QkrojGYU9xbLFEpP
      dn6LtSfp3nEZTYOAoRM0DDKftWQ5ymYhc410/i7xyHFMczeN+oYrAdiq/LWv5NIsGUfnXsph
      fKmIZS9/OfeYDnsGz6PrldZ6U1OY+vLtynae6aUPCJq3aI08j25sY6NPAwnAVhUJPdXiFbBk
      6QwnHaZSRZw1PmDtOHidQPDx0EgdC5/mXXX7XGmG/Px/EwvtJhI8BlqAeoMgAdiqIvUtaLdR
      Cpgu6Yws2cyl1/8aHe9coLPv2rLrN+E3mSyuvr/CYSl7m0xhnHj4KD7fPsCo+XwlAFtVbPkg
      9Gay0XiQh5FFm3S+ugXxPKbN7sGP0LTlg2HC+uoDZL7IsgvMJM8RMG/TGn4Bw9NJLU8DCcBW
      1dpSaQ1q8qCYIjpjacW9peUvtmtTDBy+is+/8jplPq22VSXzpXnyCz8nFtxFNHQctOqegBKA
      rSoYgIC/KS1BCsg6OvfSDuOLK7/YrifRO097943Vf/eZQK1LqyqSuREyhfvEw4ME/M+g1rnE
      JQBblceARBzGHzbskApI2gZ3Fi2m0mu/2K7FDFgMPHseTVt9/7BR/5PLdkrMpj7Gn79DPPIC
      hqeH1apFEoCtrHNbQwLgaBozBRhJOsylN/5EGTj8O0zf2kM2/VqRjbb1F8pLTCz8gmign2jo
      BJq+vFuFBGAr6+nY0O4WGg/zGiOLZdL5xiyu0dE/RVvH+ku0tvlMoDFdulP5MTKFh8TDhwj4
      nwXt8exwEoCtLBattAbVODt0EZ2xjGJ0sUy+phfbtfmCZXYevLBm1eeRjVSBVuIoi7n0EL78
      CPHICTze7YAuAdjSdB36uiF5q6rNs0rnbtJhPFnCshp34QOgKXYPDuH1VjdW2aMKGJqJ3eBW
      rKKVYnLx/wj7e2kNvyAB2PIGdlTWB1vFo67Id5MOE8lC01pNu3ZO0Npe/UIdXg1ipslCsTlj
      mzOFB+SKExKALS/eAq2xykRZX+CgMVPSGFm0mM+Wmvq5IBApsGP/xzX10DY0COqKZk7u6ChH
      ArDlaRrsHYDzF4HHX2zvLtqk8s0fN6xpsHvwUzze2lqPNBx0VaTZA3skAG4w0E9p6DqjC8UV
      uyI3U/fuMWLxetcDUzQ7ADIxlhv4fdxp6+XGdHFTL/5gLE//vk++0oPTJAAusfPUATy+1bsY
      N5puKPYMfoxh1Nqd4THPOusNN4IEwCWCLSG2H9u9aeX17rlHtGVjX6ETvuYP6pEAuMielw9i
      Bn1NLyfcmqF398UNV9/DRvOraxIAF/GFA+w9c7ipZeiGYu/RCxjGxgfk+2vuDVo7CYCLaJrG
      zuf3EuloaVoZ2w/cIRhuzOJ8bX5z/Y02SALgMrrHYPDtk+hG4//po4k0PTsvNazVJyJVINEM
      bf3bGHjpYEOPaXgd9gx+hK437uOaT6pAoln2vnqIlt62hh1vxzM3CYbmGnY8eNQlurkkAC7l
      MT0c++NvNKRVqLVjkc7tVxv+0VZagURThRNRjv7R6Q1duIbXYffhx5NaNZJHFfA0+TOyBMDl
      Ovf1cvD3jtcZAsXA4Wv4g4uNPq3Pj59o8gx30hnODVSRX//yPeI79hAoLzE6n+P5Q3u4eOkq
      BwZPMHD6AMVMnuEPrtV02LbuBbb11LZPrSKGYqqJx5cngAuU5u9zezZDe1ucqzeuEm9twx+M
      cGBPPzevD6NpGgfeOFpTVwmv32Lg0NozOzSCj+Yu9icBcAFv2y7+6s/e5tL5C7z9h3+OmZpm
      JlticmoWn1mp++iGzuDbJ+k/saeqYw4curzqpFaN1OyPYRIAFyikF3n3nXfoGtjFlU/OMVnS
      8GTnmVtKE2/f9vl2uqEz+NZJdp3av+bx2vumSXTdbvZpA5UqUDNpSjV57jzxtaMcxciH17n+
      qyGU/WRTpBko89yr/4PX3JyV6H+9aPKj6ea1BMkTQCyj6RoDLz3D8T/5xpNjCDTF7sFLm3bx
      Q/M/hkkAxIo0TaP7YD8vf/9NYl1xoDKpVXzbnU09j4hHqkDiKbNKFnd+fYG28D/h8dQ2ydZG
      TRQ9/OM9oymLvnp0j3wHEOvzmB72v3EKKx0iN/bP2PmxTSs76jXw6jolp7HdIvpa+vmLk38t
      TwBRG2UXyE/+iMLUf4LT/EX4bM3H397WydmNCUDAG+QPDv8xb+z7Nj6PTwIg6uOU5shP/JDi
      7C9BNXM5Vo2/G/aRsjZ2mZqGyZk9b/DWs39IazAOKEZuXJYqkKiPbiYI9v8Af8fbFKZ+TGnh
      fZRd3byftVG0+XykrPXXG1tJyAxxeucrvPnMW2wLd6A96lynHMank/IEEI2gcEoLFGd/SXHu
      FzjFxgyJfORfJmNcTlYfAA2Nrmg3L+8+y8sDZ4n5Wx5f+F8457s3r8gTQDSChm62Eej5U/xd
      f4SVvkxp/gNKS+dQ1toLYVTDT3UXf2sgzrG+5zm18xvsbd+Poa+1aqSG4zjyBBDNo5SNlblB
      OXkRK30FO3evrmrSfy1E+PnM8uGRITPMzrYBDnQc5NmuQQYSe9C12j5tSQDEplBKgVPALjzE
      zt3Dzo9jFydxSjOochLlFEGVUcqurGypaWiaAZrJJ7k4v0mHSYTaaQ930NfSz/bWftrDHZWW
      nA0MmpEAiIaYnxxj6PoIRwafZejiED27DhJ0lrg3k+XlF5/H0Fe/SJWywSmhnDIoG3AADTQD
      TTdB96HVeGevlrwDiIY499vzBKIt3Lpxi/3HT3P1t++TWpiltWcntlIYaww50zQDjACaEdjE
      M66QvkCiIUKRGCdOHAJPiPEr58kpg5ZEF3vbTCZTzR3UshESANEQJ0+d4PLVMY4e2Qu6ydkz
      r3Diuf1M2UH6Wpo/yW295B1AuJo8AYSrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kA
      hKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISr
      SQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kA
      hKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKv9P6C3ypLnEIXQAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='deley count by station' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='subway line' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
